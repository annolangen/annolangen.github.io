{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","ts/spreadsheet.ts","../src/directives/style-map.ts","ts/app.ts"],"names":[],"mappings":";;;;;AWWA,IAAM,SAAS,GAAG,GAAlB;AACA,IAAM,SAAS,GAAG,IAAI,UAAJ,CAAe,CAAf,IAAoB,IAAI,UAAJ,CAAe,CAAf,CAApB,GAAwC,CAA1D;ACEA,ALKA,APnBA,ACAA,ACAA,AIkBA,AGAA,ALAA,ACAA,AFlBA,AQaA,IAAM,UAAU,GAAG,SAAS,GAAG,SAA/B;AHMA,AGLA,IAAM,WAAW,GAAG,wBAApB,EAA8C;ACd9C,ALAA,ADmBA,AGAA,ALGA,ACFA;AGpBA,AGeA,IAAM,UAAU,GAAG,gCAAnB;ALKA,AGCA,ALrBA,ACAA;AMgBA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,KAAD,EAAc;ALMjC,AGtBA,AEgBsC,SAAA,GAAA;AAAG,CAAzC;ALOA;AKNA,IAAM,aAAa,GAAY,UAAU,CAAC,EAAD,EAAK,UAAL,CAAzC;ALOA;AKiBA,SAAgB,cAAhB,GAA8B;ALzC9B,AK0CE,MAAM,KAAK,GAAgB,KAAK,CAAC,IAAN,CAAW;AXtBxC,AWsB0C,IAAA,EXtBpC,IWsB0C,EAAE,IXtBlC,GAAG,IAAI,OAAJ,EAAnB;AAOA,ACLA,ACsBA,ACxBA,AQsBwC,GAAX,EAAkC,UAAC,CAAD,EAAI,CAAJ,EAAK;AAChE,WAAA,KAAK,CAAC,IAAN,CAAW;ACvBf,ALGA,AIoBiB,MAAA,MAAM,EAAE;AVlBlB,AOkBP,AGAe,KAAX,CVlBS,CUkByB,UAAC,CVlBd,AUkBa,EAAI,CVlBd,AUkBU,EAAK,IVlBT,CAAC,cAAP,KAA0B,SAA1B,IACvB,MAAM,CAAC,cAAP,CAA4C,yBAA5C,KACG,SAFD;AAIP,ACmBO,AElCP,ACAA,AFUO,AQmByC,MTKnC,ACxBA,MAAM,CQmB6B,CTK3B,CCxBC,EDwBE,EAAjB,KCxBwB,EQmBiB,IRnBX,CAAC,IAAI,CAAC,MAAL,EAAD,CAAN,CAAsB,KAAtB,CAA4B,CAA5B,CAA8B,IAAtD;AIED,ALwBN,ACxBA,AQiB6D,KAAzD,CJjBS,AIiBT,wBJjBE,CAA+B;AKFrC,ALGE,AEbF,AE6B8D,GADjC,CAA3B,EClBI,aAAa,GAAG,IAAI,OAAJ,EAAtB;AAEA,AJqBM,AHzBN,MAAM,GGyBU,UHzBG,GAAG,EGyBhB,CAA0B,CHzBN,KGyBpB,EAAgD,SHzBtB,GAAhC;AG0BE,AJxBF,ACAA,AMqBE,MHGI,AGHE,KAAK,GAAG,KHGG,GAAG,CGHd,KAAQ,CAAC,GAAD,EAAc,EHGM,CAAC,AGHrB,EAAyB,CHGnB,CAAmB,MAAM,CAAC,IAA1B,CAApB;ACzBK,AEsBuC,MFtBjC,KAAK,AEsB4B,GFtBzB,IAAI,GEsBsB,IFtB1B,CEsByB,CFtBvC,CEsBqD;ATQrD,AO5BP,ADwBE,AGHE,MTOS,AMJP,ONIc,ASPhB,GTOmB,EAAhB,ASPE,CHGU,EGHP,GHGY,OGHpB,EHGF,CGHuB,CHGU,EGH/B,GAA2B,KAAK,CAAC,GAAD,CAAL,CAAW,GAAX,EAAgB,KAAK,GAAG,CAAxB,CAA3B;AHIA,ALpBG,AQgBkD,IHIrD,CGL0C,CRfjC,UAAU,CKoBN,ELpBS,CKoBN,MLpBa,MAAM,KAAhC;AFIA,AKpBP,AEqCM,AJvBA,AOkBmD,GADvD,GVXW,AOiBP,AJvBO,YIuBK,CPjBQ,COiBN,EPhBhB,AGPE,CHOD,AGPwB,CIuBL,OAAJ,CPhBhB,COegB,CPdf,KADD,EAEC,GAAA,GAAiB,IAFlB,EAGC,MAAA,GAAoB,IAHrB,KAGmC;AACjC,AOaA,AJlBJ,ACNI,AFIC,ECEL,IIkBI,AHxBO,AFIA,GFOA,IGLX,CHKgB,AGJZ,CIiBS,EAAE,ALpBO,EFOD,CIXjB,AFIqB,CKoBN,AHxBM,CJWrB,AGLJ,EHK0B,AOaX,AJjBS,ADHK,MAAJ,CAAW,ECEpC,CDFuC,CCInC,KDJyC,ECE7C,EAE0B,ADJuB,UAAU,EAAlC,CAApB;AFQC,AOUY,AJrBD,ACKjB,AFAF,AQaE,ENbA,GGgBE,IJrBe,AOkBV,CVPK,CAAC,EINb,CJMgB,AILZ,EDNa,GHWK,AGX4B,CHW3B,CGXN,ACKjB,EACmC,MADnC,EJMM,AIJF,IAFJ,EAEkB,SAFlB,EAE8C;AEA9C,ANKM,AKbD,AE0BH,AJjBA,ACAA,AMWA,EJZF,ENKM,AOaJ,AGNA,ELpBS,GFSJ,ACAA,AMWA,EAAE,EVPM,CAAC,EIJd,CCToB,AFSpB,CIiBc,CAAC,AHjBA,CCTS,AFSR,EIiBhB,CAAmB,EF1BI,CLanB,AIJJ,AMWQ,CVPmB,CMLH,AHCxB,CGAE,ADT4D,AE0BrC,AGNlB,CHMmB,CGNb,CVPT,EAA+B,AOanC,AGNO,EJZiB,ACkBQ,AGNhB,EJXI,ENIhB,EMLoB,EACU,KCiBlC,EDlBwB,EAEtB,OAFsB,EAEA;AACxB,ANGI,AKbN,AE0BC,AJjBC,ACAA,AMUqB,IVNjB,KAAK,AKZP,AFQG,ACAA,CECC,ENGM,CAAR,AUMiB,CLlBd,CDQP,CECY,EHDZ,ACAc,AMUY,CJTX,ADTH,AKkBe,EPVV,COUS,CJTP,ADTjB,AKkBmB,CJTD,AFDpB,AMUgC,CJTb,CAAnB,CDRE,AKiBmB,ELjBjB,AKiBiC,CPVrC,IOUqB,ELjBV,AKiBU,KLjBjB,KAAiB,QAAjB,IAA6B,OAAO,KAAP,KAAiB,UAAhD,CAFJ;ALcK,AKXN,AFOG,ACAA,AMS4C,CLpBzC,IKmBE,IPRA,ACAA,IAAL,GDAA,ACAY,GDAG,CCAf,MDAA;AGCA,ANIC,AOaH,AJjBC,ACAC,AMSA,CVfG,GUeH,EHQE,EDjBE,AISA,CNTC,CMSC,IJTI,ACiBA,GAAG,CHjBb,CEAe,EFAE,CEAjB,EAAoB,AISb,GAAD,EAAM,CHQc,AHjB1B,CGiB2B,CGRrB,EAAS,SHQF,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,CAAf;ADhBI,ANKN,AILG,AFJI,AQYiB,MRZX,MIID,CIQY,KAAK,CAAC,EJRT,CIQQ,CAAL,CJRA,AIQW,ERZF,CQYT,CJRI,CJJQ,AQYI,ORZjC,MQYiB,UJRA,CAAsB,OAAtB,EAA+B,IAAI,CAAC,KAAL,CAAW,CAAX,CAA/B,EAA8C,OAA9C,CAAlB;AACA,ACgBJ,AJhBA,ACCA,AFJF,AQUqD,EPPnD,GOKO,CHWH,EJhBE,CAAC,IGAI,CCgBC,CJhBN,EAA+B,EIgBpB,GDhBG,CAAC,KAAjB,ACgBJ,EAA4B;ADfzB,ADVE,AE0BH,AJhBA,AOOA,IAAA,ELjBS,EFUL,CAAC,EIgBE,AGTA,CPPC,CAAR,AOOS,GLjBU,GAAI,AE0BvB,KF1BsB,IAA+C,EKiB3D,GAAD,EAAM,GAAN,EAAW,IAAX,EAAe;ALhB1B,AE0BC,AGTG,GHJgD,CAepD,KF5BO,IKiBF,CLjBO,CAAC,GKiBH,CAAC,GLjBJ,AKiBG,CLjBW,AKiBhB,CAAW,GAAX,CLjBE,GKiBgB,ELhBnB,EKgBuB,CAAC,UAAL,CAAgB,GAAhB,IACf,UAAU,CAAC,IAAD,EAAO,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,MAAL,CAAY,CAAZ,CAAD,CAAd,EAAgC,KAAhC,CAAhB,CADK,GAEf,aAAa,CAAC,IAAD,CAFjB;AJPF,ADRE,AE2BJ,AJnBE,AOS0B,GLjBvB,EAAE,GCQD,CHAC,CERK,ICQA,ADRK,CFQJ,IGAI,ADRa,AFQ5B,CER6B,ECQ7B,CHAmB,CGAC,EDRe,CAAC,CFQZ,OERI,AFQ5B,CERG,CAFL,AFUmC;AGC/B,ADRL,AFQK,AOEG,CLdF,EKcL,OPFQ,GGAG,CAAC,AHAA,IGAI,CHAC,SAAb,EAAwB,IGAhB,CAAc,OAAd,EAAuB,IAAI,CAAC,KAAL,CAAW,CAAX,CAAvB,EAAsC,OAAO,CAAC,YAA9C,CAAD,CAAP;AKFC,ALGF,ADPL,AFOQ,ACAN,AMSD,ENTC,IOHW,ERGL,CCAC,GDAG,ACAH,CDAI,CQHQ,GAAG,IRGhB,CAAc,MAAM,CAAC,CAAD,CAApB,UQH2B,SAAD,IAA2B,IAAD,IAAe;AACzE,AJoBA,AJjBK,ACAH,AFLE,MSEA,ATFO,ESEL,AJoBA,EHjBE,CGiBC,AHjBA,COHC,EJoBE,AHjBA,AFLR,CAAe,IEKF,CGiBC,CAAC,GIpBG,EPGV,CAAa,CGiBb,CAAe,IAAf,AHjBA,CGiBoB,EHjBE,CAAhC,SOHE,IJoBQ,CIpB6B,AJoBzC,CAjBoD,CAmBpD,EItB6C,YAAY,qBAArD,IACA,IAAI,CAAC,SAAL,CAAe,IAAf,KAAwB,OADxB,IACmC,IAAI,CAAC,SAAL,CAAe,KAAf,CAAqB,MAArB,GAA8B,CADrE,EACwE;AACtE,ALCA,ANGG,AIFH,AFFF,AU9CF,AFyCA,ERKE,EU9CF,EZkDa,CUTb,CJMQ,AFCA,AMPR,ECKU,EPEE,CFFV,CSAY,ALCA,AJDA,AU9Cd,CRgDe,EJES,AIFpB,AQhDJ,ED8CU,ALCS,CKAX,AXIJ,AELF,CFKG,CMJD,AJDkC,AQLtC,EJMwB,AM/CxB,CAAA,AFyCA,IRKE,CFKE,CEL8D,CFK5C,KAAlB,EAAoC,AUVxC,GVUwC,GAAiB,IAArD,KAAmE,MYnDvE,CAAA,yBDgDQ,6CAFE,CAAN;AAGD,ALDG,ANIA,AQZC,AD2BL,AJnBI,ACCF,AFNO,EKwBT,IC3BW,ALQP,CAAC,CCCC,CJGK,AETF,CKwBD,EC3BS,CFQN,ACmBA,CDnBC,ANII,AETP,CMFP,CAAC,CNE8B,CIKjB,CNIK,AETZ,GFSL,AQXF,ERWwB,AQVvB,AJOmB,EGkBE,CAAC,AHlBA,KAAvB,CIRA,EAEC,CDwBQ,CAAwB,GAAxB,CAA4B,CC1BrC,ED0BS,CDnBC,ACmBZ,CDnBqC,CELE,MFK3B,EAAkC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;AACD,ANIG,AQTF,ALKD,ADFD,AU9CJ,AFwDA,IExDA,EJ2CU,GNGD,AQUA,CVJK,AQTA,CRSC,EQTE,CRSC,EENd,CU9CJ,CJ2CsB,CRSE,AQTD,ANGJ,AQUnB,CVJyB,AYpDzB,AFwDoB,EFbH,CAAU,GNGvB,CU9CJ,CAAA,GZoDQ,CQTS,CAAX,AEaN,EAA2C,IAA3C,EAA2D,EExD3D,CAAA;ADkDE,AXGM,AOcN,AHjBE,AFFA,AQSF,IVJM,EOcF,AGVE,ECPA,CPAC,CFFC,EQSI,CVJG,AIHJ,CJGK,AOcJ,AHjBA,CMOG,ENPA,CAAb,CGiBe,AGVjB,CNPkB,CAAC,EFFE,CEEC,CJGhB,AIHJ,CJG0B,AELI,CEEP,CGiBzB,AHjB0B,AFFxB,EKmB0B,AHjB1B,CJGI,CIHwB;AOAvB,ALDL,ANKI,AQVF,ADwBF,AJnBA,ACEE,AFFF,AUhDJ,AFyDE,EAAA,ECRO,AXID,AYrDR,EJ2CU,EEcF,CVJK,AGLJ,AOSA,CJTC,AELI,ANKJ,EFKM,AIHJ,CJGJ,AIHK,EIPM,ALKJ,ADAA,CEEC,EFFU,AUhD1B,CNgDmB,AHAf,CDAA,CEEiB,AFN6C,AU5ClE,CNgDsB,AJClB,AQQF,CPTqB,CKLjB,CEcmB,CJTC,AELI,ELKF,ACEZ,AQlDhB,CRkD6B,AQlD7B,CRkDgB,CAAV,CAD0B,CAE1B,EDHF,EAAiC,COSnC,aJToB,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,OAAtC,CAAlB,IMhDJ,CAAA;ADiDQ,ALAJ,ANKG,AQVC,ADwBJ,AJnBE,ACGA,IGgBF,EInBkB,IAApB,ARAQ,CGAC,CCmBC,EJnBE,CImBC,IAAI,AJnBA,CGAC,CAAC,KAAjB,AELgB,ELKd,EAAwB,KKLtB,EAAuB,ADwBhB,CAAa,MAAb,ECxByB,ADwBJ,CCxBK,KDwBC,CAAC,ICxBnC,cDwB4B,EAArB,CAAX,CAF0B,CAG1B;AInBF,ALAC,ANKE,AQVG,ALKA,ACGF,AFHF,AUhDJ,AFwDE,CVVK,CUUL,EFbM,IGKA,ARAA,AOQA,CFbK,AI3CJ,AFwDA,CFbK,ANKJ,ECAE,CKLJ,ALKK,CKLK,AEahB,ERRc,CQQC,EPRT,ADAW,AUhDnB,GAAmB,CJ2CX,EAAqB,ENKF,CAAC,CMLK,AEahB,GFbmB,IAAI,QNKrB,CACX,MMN4B,CAAY,ANMjC,CAAC,KMNgC,CAAA,CNK7B,EAEX,GMPwC,CAAA;AGKvC,ALCP,ADTI,AGIyB,ADwB3B,AJnBG,ACGD,AFFM,AUjDV,AFuDqB,ICRd,AJoBL,EF5BS,AGIkB,AI3CzB,KAAK,AFuDY,GEvDT,CAAZ,ELmEe,CAAC,GCxB4B,EAAf,CHJzB,CAAyB,EE4B3B,CAAwB,GAAxB,AGZuC,CHYX,AGZY,GHYxC,CGZ4C,CHYX,AGZY,CAAD,CAAL,EAAU,IHYjD,SGZuC,CAApB;ACRf,ANDN,AGJ8C,AD0B7C,AJnBE,ACGC,AFLa,AU9CjB,AFsDiE,ELTjE,CEJoD,AGapD,CHeA,CC5B8C,CGK9B,ATGV,CMN0B,EI3CzB,CV8CU,EAIX,CGLN,CAAY,AGJkC,CGKrB,AHLS,CGKR,AHLpB,CNKW,CAAf,CAN8D,CAW9D,CGNF,AO7CO,ED8CP,AND8B,CMR2C,CAWzE,ENHA,EAA4C,OAA5C,EAA0E;AAF1E,AGEM,ALIL,ACGG,AFAF,AUpDW,IJ6CP,IAAI,CHFV,AGEW,EI7CE,GP2Cb,GAAQ,EGEF,CAAgB,CHFtB,AO3Ca,CAAA,IAAA,CAAI,EJ6CX,cI7CW,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,iDAAA,EAAA,wEAAA,EAAA,iDAAA,CAAA,EAAA,CAAA,iDAAA,EAEC,wEAFD,EAG2D,iDAH3D,CAAA,CAAA,CAAJ,EAEA,KAFA,EAG6C,YAAA;AD8C1D,ANHE,AGAG,AJOD,AFAF,AUlD8D,AFoDhE,MCNI,CAAC,ENHE,AKSA,IEpD0D,EFoDjE,CLTE,EO3CoE,CP2CrD,CMGC,CAAC,CC9CuD,CAAV,CD8C3D,CAAkB,CNHrB,GMGG,CAAL,EAA8B;AAC5B,ANHA,AEuBF,AJnBA,ACGI,AQnDwE,AFqD7E,EHcC,AJnBA,EQDE,CClDW,CAAA,ETmDP,CQDC,ANHA,CMGC,CRCF,EEJJ,EEuBW,CFvBC,AEuBA,CIpBZ,GAAgB,ANHhB,QEuBF,CIpB2B,AJoBA,CIpBC,EJoB5B,CAA+B,IIpBb,CAAkB,CJoBC,CAAC,EIpBpB,CAAuB,GAAvB,CAAhB,AJoBF,EAA+C,QAA/C;AInBC,ANHC,AGDE,ADwBJ,AJnBE,ACGE,AFDF,AU/CD,EJwCG,CGVqE,ACrCzE,CDqDA,EHNQ,CAAC,CNOH,CGNC,AEuBA,MCxBH,CHCF,AGDgB,CDwBlB,EFvBiB,EHME,CMPf,ENOkB,CAApB,CGNA;ACGF,ADFE,AGDE,ADwBL,AJnBG,ACGE,AFDF,AU/CH,AFkDD,EJPE,AEHI,EEUA,EFVI,CAAC,CNOH,CGNC,IGDH,ANOO,CGNT,EHMY,CGNC,AHMA,CAAb,CGNA,GCEkB,CAAC,CIOG,GAAG,GJPP,EAAuB,IIOvC,oBAAuB,CAAC,CAAD,EAAY,QAAZ,EAA4B;AJNrD,APSG,ASZF,ALKD,ACGE,AFDF,AQGF,CFzBK,KT2BM,EGLL,CQGN,EJPS,GIOJ,CJPQ,APSO,AWFd,CAAD,CRHU,AQGf,CXEoD,CAA7B,CGLL,AQGP,CRHT,EHMC,CAAC,GAAG,CWHP,EJPS,CAAa,APUnB,AWHmB,KXGI,CWHE,CJPnB,AIOoB,CJP3B,AIO0B,CAA5B;ACLA,ALDC,APUG,AMbF,AEuCG,AJlCH,ACGE,AFDF,AU/CJ,AFiDiC,CADjC,KH+Ba,EInCL,AZSI,CAAC,AMbJ,AOxCA,CV+CC,EHMM,CAAC,AMbJ,CNaK,AMbJ,CMIC,EZSM,AMbJ,CMIC,ANJd,EAAgB,AEuCO,CR1BV,AMbI,AOxCrB,CbqDM,CQ0BwB,CFvCN,AOxCH,GL+Ea,GAAJ,CInCC,ANJA,CMIC,ANJA,AEuCzB,GInCW,CAAkB,ENJZ,EMIN,CAAhB,ANJuC,CAArC,EAAwC,CAAC,EAAzC,EAA6C;ANc3C,AMbC,AFKH,ACGE,AFFK,AU9CT,EbqDI,IGPK,AU9CL,IAAI,CPwCE,CNaI,CAAC,AGPP,AU9CG,EAAX,CbqDI,AMbC,AOzCc,CbsDA,AMbiB,AOxCrB,CbqDX,AMbC,ENaiB,EMbmB,ENarC,GMb0C,WAAL,EAApC;AMIL,ALnCmC,AP6C/B,AMbD,AFKD,ACGE,AFHc,AQIpB,MRJoB,CSFb,EZUM,AWJJ,CXIH,EGRoB,CSFb,CTEe,GSF1B,CDMF,CAAmB,ECNE,EDMrB,EAAqC,GCNnC,ADMF,ECN8B,ADMe;ACLzC,AZUC,AMbF,AFKC,ACGE,AFJuB,AU7C3B,AFkDA,CXDK,KWCC,ECNA,ATCqB,ESDnB,CC5CC,GD4CG,ADME,GAAG,CCND,GDMK,CAAC,IElDtB,CD4CM,CAAJ,CC5CsB,CD4CI,ADMX,CAAc,WAAd,CAAjB;ACLI,ANFJ,AFIE,ACGE,AFLsB,AU5CxB,IAAA,IAAI,ED4CE,CC5CC,GD4CG,CAAC,EC5CE,CAAC,ID4CR,CAAa,AC5CA,GD4Cb,EC5CO,CAAb,GD4C4B,CAAC,CAA3B,EAA8B;AAC5B,ALFD,AHIH,ACGE,AFNI,AU3CP,AFiDD,MJPW,AIOP,ERNkC,MAApC,AQMF,EAAc,cJPqB,GAAG,IAAI,wBAAJ,EAAjC;AKGE,AREL,AOGM,QCLD,ADKC,EAAA,GCLY,ADKZ,CCLa,IAAD,CAAb,EDKC,CCLqB,ADKrB,ICLD,IDKC,CAAA;ACJH,AZQA,AINH,ACEE,AFNF,AU3CF,AFiDQ,MXIG,CYXP,CDOK,GRNA,AU3CA,AFiDA,CNAC,COJC,CDIF,EAAA,CXIa,AWJb,CAAA,CAAD,CXIkB,AGVR,CHUO,EKJJ,AFNA,AU3CrB,EbqD0D,CKJlC,AQjDH,CRiDI,CAAC,CFNxB,EAA2B,QEML,CAAc,MAAd,CAApB,CAnB0B,CAoB1B;AOJE,AZQN,AINE,ACGE,AFPA,AU3CF,AFgDM,IEhDN,ID6CI,AC7CA,AFgDQ,CXKP,EarDE,AFgDK,CRLJ,CSEC,CAAC,ADGE,CEhDD,CbqDC,AGVA,AU3CA,AFgDA,CXKP,AWLO,CAAA,CRLG,AQKT,EEhDC,CbqDW,AarDA,GV2CG,CAAC,ESElB,AC7CoB,CD6CC,AC7CA,GbqDpB,CYRD,CTFW,AU3Ce,EbqDE,AGV9B,GU3CsB,CAAN,GAAqB,GbqDG,AarDxB,CbqDyB,EarDE,CbqDb,CAAe,AarDxC,CbqDyB,AarDhC,CbqDF;AYPK,AZQN,AMZW,AFMR,ACGE,AQlDH,CbmDI,CMVK,WAAW,GAAA;AMKlB,ANJD,AFMA,ADLE,AQKF,URLM,CGDC,AKMA,GRLG,AQKA,CLNC,AKMA,GAAD,CRLK,CQKC,GRLd,AQKQ,CAAV,CRLqB,GGDd,CAAkB,IAAlB,CAAP;AMKD,ANJA,AFMC,ACEE,AFPE,AU3CN,AFgDC,GC7BwE,CA6BzE,EPEI,GQlDG,YAAA,CRkDa,GAAG,CAAC,WAAW,GAAG,CAAC,CAAf,IAAoB,gBAArB,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;ADHF,ACIE,AFTE,AU5CO,WAAA,UAAA,CAAA,IAAA,CAAI,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,2FAAA,EAAA,qBAAA,EAAA,sGAAA,EAAA,YAAA,EAAA,0EAAA,CAAA,EAAA,CAAA,2FAAA,EAI4B,qBAJ5B,EAKU,sGALV,EAQwB,YARxB,EAQmD,0EARnD,CAAA,CAAA,CAAJ,EAIG,IAAI,CAAC,KAAL,CAAW,CAAC,IAAI,GAAG,EAAR,IAAc,GAAzB,CAJH,EAKE,YALF,EAQwB,IARxB,EAQwC,eARxC,CAAA;AP4CH,AFMR,ACIE,AFTE,AUlCL,AFsCD,ELLU,CO5CV,GFiDM,KLLa,EKKN,CLLM,EKKH,IAAI,CAAC,QAAL,CAAc,UAAd,CAAhB;ACAA,ANJE,AFMA,ADLI,AUlCP,ODqCM,GNJG,GMIG,IAAX,ANJe,GAAG,CMIC,INJI,KMIvB,EAA8B,ANJ5B;AMKA,ANJA,AFMA,ACGE,AFRE,AQGN,MAAI,ECAE,ATHA,EGDE,CAAC,CMIC,APKA,COLC,ADAX,CLJY,AHCA,CAAC,AQGA,KCAP,CAAa,ANJA,CAAC,EMId,EPKkB,AFRlB,EGDM,CDSe,AFRA,CSGC,CAAC,ANJA,CMI3B,ANJA,EMI8B,ATHA,CAAC,GAAN,EAArB,sBEQ4C,IAAvB,CAA4B,CAA5B,CAAvB;AOJA,ANJF,AFMA,ADLI,AUlCR,AFqCI,QLJI,COjCC,EFqCE,CLJC,GAAG,EAAX,COjCJ,GAAkB,MFqCS,CAAC,OAAO,CAAC,CAAD,CAAR,CAAhB,CAA6B,IAA7B,EAAmC,GAAnC,CAAP;ACCG,AREH,ACEE,AFPC,AUlCL,AFqCC,MCAI,ACrCD,IRyCI,COJU,CAAC,IAAD,ACrCJ,CDqCT,ECrCY,CDqCU,IPIL,KOJc,APIT,COJU,GPIjC,COJgC,CAA/B,API4B,AQzCjC;ADsCG,ANJD,AFMA,ACEI,AQzCN,KDkCE,CClCE,GPiCG,AOjCA,EDqCE,CCrCC,CPiCC,CAAC,EOjCE,CPiCC,CAAb,EAAgB,AOjCR,CPiCS,EOjCE,CPiCC,CAApB,EAAuB,CAAC,EAAxB,EAA4B,EOjCpB,GAAyB,MAAzB,CAAgC,CAAhC,EAAmC,EAAnC,CAAV,CAFgB,CAEkC;ADsC9C,ANJA,AFMF,ACEI,AFRF,AQGJ,MCCI,ANJA,AHAA,AQGE,ILHE,CMIC,ATJA,CSIC,ENJE,EKGI,GAAG,ELHA,CAAC,CMIhB,ANJe,AKGI,CCCD,ANJlB,AKGoB,ICCpB,EAAwB,EDDT,CAAc,MCCI,CAAC,IAAD,ADDlB,CCCf,ADDJ;ACEG,ANJC,AFMF,ACEI,AQ1CN,MAAI,IAAI,EPkCE,COlCC,GPkCG,AOlCd,GPkCiB,KAAK,KAAL,CAAW,CAAX,CAAb;AMKH,AREC,ACEI,AFRF,AUlCJ,AFoCA,MEpCI,AFoCA,CAAC,GRFG,EUlCE,EVkCE,CAAC,AUlCA,EFoCb,EAAiB,CEpCjB,GVkCQ,KAAkB;AGAtB,AFOF,ACEI,AFTsB,AQG1B,ULHM,CKGC,GLHG,KAAK,EKGf,OLHE,EAAwB;AMK5B,ANJM,AFOJ,ACEI,AFVF,AUjCJ,AFqCC,ECCD,MPKM,AFV+C,GUjC5C,CR2CC,ECTE,CMIC,ANJA,CMIC,APKA,CAAC,CCTC,CMIhB,CAAkB,CPKC,AQ3CnB,CPkCoB,CAAC,CMIrB,ACtCmB,EDsCK,ENJlB,OMIN,EPKmC,GAAG,aAAH,GAAmB,oBAAvC,CAAT;AOJP,ARGG,ACEG,AFVC,AUjCJ,CDDoB,CAAjB,ECCH,GRoCE,MAOO,CFVA,AUjCC,GAAG,CViCY,CAAC,GUjCR,KAAlB,KViCS,EAAL,EAAuC;AGCvC,AFQJ,ACEI,AFVE,AUjCP,AFoCD,MAAM,CAAC,GAAG,ELHA,IKGM,CAAC,CRHH,KGAO,CAAC,CAAD,CAAX,CKGiB,CRHH,AQGI,CAAD,CLHC,AKGZ,CLHa,AHAD,AQG5B,IRH4C,CAAC,KGAN,CAAC,CAAD,CAAjC,EAAsC,AHApC;AGCA,AFQN,ACEI,AFVE,AQGR,SAAO,CLHC,IAAI,IAAI,AHAF,CQGP,CAAA,EAAC,GLHe,CAAP,KAAa,QAAb,GAAwB,CAAxB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AACD,AFQL,ACEI,AFXS,AUjCf,AFoCY,SLJN,EOhCG,AFoCG,CAAA,ERHG,CGCF,UOlCb,GAAuB;APmCf,AFQN,ACEI,AFZQ,AUhCZ,AFmCW,GAAb,CEnCE,GAAG,CR4CC,EQ5CE,ER4CE,GCVG,AOlCA,CR4CC,AFZW,CEYV,CAAC,EQ5Cd,CPkCiB,CAAX,EDUM,CAAS,CCVC,ADUV,AFZN,CGEA,AHJqC,CEcnB,AFXlB,CGCmB,aDUa,CAAC,KAA3B,IAAoC,cAAc,CAAC,CAAD,CAAlD,GACJ,cAAc,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;ACTI,AFQR,ACIG,AFbG,AUjCP,AFmCF,YLDW,IAAI,IAAI,OAAO,CAAP,KAAa,QAAb,GAAwB,CAAxB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AACD,AFQP,ACIC,AFbK;AGED,AFQL,ADTM,AUlCR,AFoCF,SAAS,EEpCE,MFoCX,CAAkB,KEpChB,GAAqB,AFoCvB,EAAkD;ALA3C,AFQH,ACGA,AFZM,AUlCN,AFoCF,INUE,AQ9CA,EFoCE,CAAC,CNUC,AQ9CA,GAAG,CR8CC,GMVV,CEpCc,CR8CC,AMVA,IEpCb,EFoCmB,CNUX,CAAa,CAAb,CAAR,AMVuB,KAAJ,CAAU,kCAAV,CAAN;ALAZ,AFQD,ACGA,AQ9CD,AFoCD,SAAO,CACL,CNSO,IAAP,CMTM,CAAC,QAAQ,CAAC,CAAD,CAAT,CADD,EAEL,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,GAA0B,UAA1B,CAAqC,CAArC,IAA0C,IAAI,UAAJ,CAAe,CAAf,CAFrC,CAAP;APSE,ACED,AFbO,AQMT,EAED,QPGU,MDXI,ECWI,GAAG,ADXF,GAAG,CAAZ,gBCYF,KAAK,QAAL,CAAc,OAAd,CAAsB,OAAtB,CAA8B,SAA9B,CAAwC,IAAxC,CADa,GAEb,QAAQ,CAAC,UAAT,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AERA,AFYA,AShDF,AF0CF,ILNI,EOpCI,EPoCA,EFYE,EEZE,GFYG,AShDE,GTgDS,AShDN,CPoCD,CAAC,AFYhB,CEZe,CAAf,KOpCI,SAAY,GAAA;APqChB,AFYA,ACDF,AFdQ,AUlCgB,AF2C1B,ENKE,QDCQ,CEZC,AOrCgB,IPqCvB,AFYW,EDfA,AUlCkB,CTiDf,ECDE,AQhDgB,CVkCjB,CAAC,CCeG,ACDH,CQhDM,CVkCH,CAAb,EAAgB,CAAC,ECeT,CAAc,ADfF,KCe1B,CA5CI,AD6BE,CCgBN,CDhBkC,CAAC,EAA7B,EAAiC;AGIxC,ADWC,AFdQ,AUnC6B,GAAvC,ORiDQ,QAAQ,AFdF,GEcK,KFdG,CAAC,EEcI,CAAC,OFdK,CAAC,CAAD,CAAV,CAAc,EEclB,CAAuB,CFdpB,EAAqB,OEcxB,CAAjB,YFdoB,CAAZ,EAAwD;ACgBhE,ACDA,AFdU,IEcV,MDCM,ECDE,CAAC,GDCG,ADfF,GCeK,EDfA,CEcf,GAAqB,EDCE,CAAC,ECDE,OAAL,EAArB,KDCe,CACX,QADW,EAEX;AEbN,AFaU,ACFR,AFdS,AUpCX,AF2CF,ELJE,MAAM,COvCC,AF2CA,ELJD,ADWG,QAAP,EQlDK,CF2CT,CAAuB,IAAvB,EAAmC;ALH/B,AFUe,ACChB,AFdQ,AUrCI,AF4Cb,MPSM,AOTA,CAAC,CLJD,EFUW,AONP,CE5CG,CTsDP,CEdK,GKIK,CPMC,AONA,CLJf,AFUA,EEVgB,COxCL,AF4CG,CE5CH,AF4Cb,IE5Ca,CAAI,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,4HAAA,EAAA,2MAAA,EAAA,sBAAA,EAAA,8GAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,sHAAA,EAAA,qBAAA,EAAA,wGAAA,EAAA,+BAAA,EAAA,aAAA,EAAA,EAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,4HAAA,EAGwC,2MAHxC,EAUG,sBAVH,EAWe,8GAXf,EAgBI,sBAhBJ,EAiBa,wBAjBb,EAkBkC,sHAlBlC,EAsBiD,qBAtBjD,EAuBS,wGAvBT,EA6BgC,+BA7BhC,EA8BiB,aA9BjB,EA+BR,EA/BQ,EA+ByD,mBA/BzD,CAAA,CAAA,CAAJ,EAGkC,UAHlC,EAUI,GAVJ,EAWK,cAXL,EAgBI,IAhBJ,EAiBK,YAjBL,EAkBO,UAAU,KAAK,gBAlBtB,EAsBO,UAAU,KAAK,gBAAf,IAAmC,IAAI,IAAI,GAtBlD,EAuBI,SAvBJ,EA6BW,MAAM,GAAG,OAAH,GAAa,MA7B9B,EA8BW,UA9BX,EA+BP,GA/BO,EA+BD,UAAU,KAAK,gBAAf,GAAkC,mBAAmB,IAArD,GAA4D,EA/B3D,CAAA;APyCT,AFcF,AStBD,AFYD,GE7CA,KTuDM,COVC,ELJE,KAAL,CFcW,EEdE,AKIA,CPUC,AOVA,CPUhB,GEdE,AKIa,EAAO,UAAA,CAAA,EAAC;ALHrB,AFcF,ACjFuB,AF+DjB,AUJT,AFW8B,QPWvB,GEdG,AKGoB,CAAA,KPWd,CEdX,CAAa,AHJF,CCkBG,CAAhB,GDlBkB,KAAK,CAAjB,CGIJ,CAA0B,AHJF,KGIO,IAA/B,EAAqC,KAAK,SAAL,EAArC;AACD,AFcD,ACHJ,AFfY,AQMoB,GAAb,CAAjB,IPYM,IAAJ;AEbD,AFcC,ADlBQ,AUJZ,AFUC,QPYO,CStBC,GTsBG,GAAG,EStBf,GAAiB,CTsBI,CAAC,QAAP,EAAX,CAtDI,CAuDJ;ADlBQ,AUJV,MAAI,OAAO,GAAG,CAAd,GVIgB,aAAa,GAAG,OAAO,CAAC,SAAD,CAA7B,CAHkB,CAIlB;AGnDmB,AFqE3B,AStBF,AFUF,IAAM,EEVA,GFUK,EPYA,COZG,EEVA,GAAG,EAAf,CTsBkB,COZd,EPYiB,GOZT,CAAC,CPYa,CAAC,AOZf,EAAqC,IPY/C,EAAiC;AEbrC,AFcM,ADlBM,AUJV,AFSsD,MPalD,AStBA,GFSkD,CPa9C,CStBC,ETsBE,CStBgB,ITsBX,CAAC,AOZjB,CRNgB,GQKsC,CRLlC,CUJkB,AFWtC,CEXuC,CVIhB,CCkBP,AObsC,CPalD,CStBkC,AFW9B,EEXqC,GAAP,CAAtC,aVI6C,CAAC,IAAvB,CAA4B,aAA5B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AACA,AQOJ,QAAA,EAAA,GAAA,YAAA,CAAA,IAAA,EAAA,GAAA,CAAA;APUF,ADhBM,AUNV,AFYM,QAAC,EPUC,CAAC,AStBA,EFYF,EEZP,CFYO,EEZM,AFYN,CAAA,CAAA,CAAD,0BPUwB,IAArB,CAAL,EAAiC;AAC/B,ADhBI,AUNR,AFWI,QEXA,AFWQ,KPWH,COXG,CEXD,EFWC,CEXE,CFWF,CPWR,AOXQ,CPWK,AOXL,CAAR,GPWA,CAAkB,AStBtB,EAAwB,OTsBpB;ADfI,AUNN,MAAA,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,OAAL,GAAe,CAA1B,IAA+B,EAAzC;ATsBE,ASrBH,AFUH,KEZE,GTuBI,GSrBG,AFUF,MPWQ,IOXR,KAAA,EAAK;APYN,ADhBI,AULN,AFSY,METZ,OAAO,AFSK,EAAE,CETJ,AFSK,IRJH,CQIQ,CAAC,EETrB,GFSoB,CAAN,EAAe,MAAM,CAAC,ERJL,GACrB,AQGyB,CAArB,CAAF,ERHE,CAAC,WAAL,KAAqB,oBADzB;AGCN,AFgBC,ACLD,AFVM,AUNN,AFQ2C,KAA/C,CLHW,ADWA,AQhBP,CTe+B,CAQ/B,WElBA,AOLa,CPKO,AHCR,AUNE,GRgBd,EQhBa,CAAb,MRgBiC,EFVP,GACf,IAAgB,CAAC,IES5B,CAA+C,OFTpC,CAA8B,mBAA9B,CADL;AGGV,AFeI,ACPJ,AFTW,AUPP,AFQL,ELAC,ADQA,CMdsD,GEFlD,GRgBG,EQhBE,CRgBF,CCRP,CAAY,AHDD,AUPC,IVOe,AUPvB,CVOwB,IGC5B,EAAyC,SHD9B,CAAiC,mBAAjC;AGDX,AFkBI,ACPF,AFTQ,AUPP,AFOJ,CAND,QLIE,EDWS,GCXT,GAAiB,EDWA,CFTD,KESO,CCXvB,CHEuB,GAAG,EEST,EAAe,QAA9B,EFTsC,CAAC,KAAf,CAAqB,WAArB,CAAhB;AGCR,ADSD,AFTS,SGAH,SAAL,CHAa,EGAI,GHAT,CAAW,IAAX,CGAR,AHAwB;AGCzB,AHD0B,AUPzB,AFQJ,IERI,AFQE,UERQ,EVOe,IAAI,AQCX,ERDa,CQG/B,URHwB;ACgBtB,ACLJ,AFX8C,AUN7C,AFUD,ENOA,AMPA,GAAG,EAAA,GADD,GPaS,GDhBmC,IEW5B,CFXQ,CCgBN,CCLF,EDKK,IAAI,CAAC,KAAxB,EAA+B;AEbnC,AFcM,ACLJ,AFZmD,AQKrD,ELFA,AKEA,IAAI,EPYE,AOZF,ELFI,ADSA,CCTC,CKAP,ILAM,AHH6C,CCiBtC,CEdQ,ADSP,EFZU,CEYP,MAAM,kBAAN,EAAjB;ACRA,ADSA,AFbyD,AUL3D,AFWA,EAAA,GAAG,EAAE,CLFC,EDSE,CQlBC,CFWC,CLFC,AKEA,GRNgD,CEa5C,CCTC,EDSE,GFbgD,AQMtD,CAAD,CRNyD,AULpE,CFWe,CAAJ,CNOe,AQlBH,CRkBI,AMPX,GLFV,IDSJ,CCT2B,CAAC,WAAW,CAAC,KAAD,CAAZ,IAAuB,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;AACvE,AFaE,ACJJ,AFdwB,AUJxB,AFUmB,IEVnB,MRkBM,CCTC,AKCY,CPYX,AStBA,AFUY,GRNZ,AUJG,AFUY,CLDrB,AFaW,AOZM,CPYL,EEbC,CDSC,CQlBC,CAAC,CRkBC,CCTjB,CADuE,AFcjE,CEZN,COVqB,GTsBI,ACJD,CAAC,CQlBV,CAAjB,OTsBI,CCJJ,CDIuC;AEXrC,AFYI,ACJN,AFdQ,AUJT,AFSyB,GAAhB,CNSR,AMZA,MPgBM,CCJC,CAAC,EFdA,CCkBG,CAAC,IAAN,CAAW,ECJjB,AFdiB,CEcG,CDId,EDlBe,OEcrB,AFd4B,CAAC,MAAR,GAAiB,CAA9B;AGON,AFYI,ACJN,AFdO,AQKT,EAAA,GAAG,EAAE,GPaG,EObE,CAAC,GPaG,CAAC,MObH,CAAD,EAAI,CAAJ,CPaH,ACJQ,CMTA,EPac,IAA4B,ACJxD,CDIyD,CCJlC,MDIjB,ICJ2B,CAAC,UAAlC;ADKK,ACJL,AFdK,AUJP,AFQqB,WNUZ,AQlBA,AFQY,CAAC,GAAG,CERzB,AFQqB,GNUnB,AQlBY;APUV,ADSH,AQlBC,AFOwB,GAAhB,CEPR,AFGA,MLMM,CAAC,AOTA,GAAG,CAAV,wBPSmB,KAAZ,CAAL,EAAyB;AACvB,AFYA,ADlBA,AQIN,EAAA,GAAG,EAAE,KPcK,AOdA,CLEC,AFYA,AOdA,CRJA,GCkBI,CDlBY,CAAC,CCkBV,EEZZ,CAAe,AKFT,CAAD,EPca,ADlBb,AQII,CPcU,AOdd,CLEL,CKFU,ELEa,AHNW,IGMlC,AFYY,EAAR,IDlBJ,ECkBmC,ADlBW,ICkB9C,EAAyC;AEX1C,AFYG,ACjB2C,AFD3C,AUJN,AFOmB,QEPf,CAAC,EFOc,CRHb,AQGc,EEPpB,CFOuB,CEPX,AFOO,CRHR,CAAC,IAAN,CAAW,IAAX;AGOL,AFYK,ADlBA,AUJJ,AFMsB,GAAhB,CALR,EEDE,KAAK,CVID,EUJI,IVIE,CAAC,MUJQ,CAAC,IVIhB,AUJe,EAAO,CVIA,EUJP,CAAnB,CVIsD,CAAC,OAAnD;AGOP,AFYO,ADlBD,AUJJ,AFMH,EAAA,GAAG,EAAE,KAAK,CAAC,UAAC,CAAD,EAAI,CAAJ,EAAK;APiBR,ADlBH,AUJJ,AFKoB,SRzCjB,EQyCiB,CAAC,GRDX,AQCc,CAAJ,GRDN,IAAI,CAAC,QAAL,KAAkB;AGOjC,AFYQ,ADnB2B,AQCT,ELM1B,CKNU,KLMJ,EFYE,CEZF,KFYQ,CAAC,WAAP,GAAqB,KAAK,CAAC,GAAN,EAArB;AEXN,AFYM,ADpBG,AUHX,AFFE,CAFJ,ORO2D,CUHlD,CTuBC,CEZC,GFYG,GAAG,ISvBR,ETuBc,CAAC,QAAP,EAAP,KEZa,KAAK,KAAjB,CAAP,EAAgC;AAC9B,AFYG,ADpBD,AUJO,WAAA,CPYH,IHRE,IAAI,CGQG,AOZN,CAAA,CVIO,CGQE,EOZT,CVIoB,AUJhB,CVIiB,CGQP,GHRrB,EGQF,SOZa,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,iOAAA,EAAA,OAAA,EAAA,gDAAA,EAAA,6IAAA,EAAA,wNAAA,EAAA,2DAAA,EAAA,wHAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,iOAAA,EAUgB,OAVhB,EAUgC,gDAVhC,EAW8C,6IAX9C,EAiBE,wNAjBF,EA0BW,2DA1BX,EA4BgB,wHA5BhB,EAkC4C,kBAlC5C,CAAA,CAAA,CAAJ,EAUa,OAVb,EAU4B,QAV5B,EAWS,IAAI,CAAC,GAAL,CAAS,GAAT,EAAe,MAAM,OAAP,GAAkB,QAAhC,CAXT,EAiBD,OAjBC,EA0BO,QA1BP,EA4BM,cA5BN,EAkC2C,KAlC3C,CAAA;APaT,AFYC,ASUJ,AF5BH,GEPE,ITAmC,CA2B/B,COpBG,ELME,CKNX,CAAa,GLMP,CKNN,ELMmB,AKNY,GAA/B,EAAuC,SLMjC;AACA,AHTE,AU+BP,AF5BC,MLMI,AKNE,QRHI,CGSG,AKNE,CLMD,EHTA,AQGI,CRHH,CGSF,CAAT,KHTM,CAAa,CQGK,CAAC,IRHnB,KAAwB,AQGI,CRHhC,AQGiC,ERHF,EQGC,EAAO,GAAP,CAAV,CAA5B;ALOG,AHTK,AQGR,SAAO,SRHO,CQGP,KRHa,AQGb,EAAK,CRHW,IAAI,CAAC,UAApB;ACsBJ,ADrBI,AU+BV,AF7BkB,SE6BT,CTVC,COnBQ,GPmBJ,CAAC,CSUf,EV/BgB,CCqBN,ASUM,CF7BW,CAAC,GPmBJ,CDrBD,CQEI,CAAT,CRFQ,AQES,EPmB7B,EAA0B,ADrBF,CAAC,CQEb,CAAwB,GRFhB,CAAW,MQEM,CAAD,EAAI,CAAJ,CRFhB,CAAhB,AQEqC;ALO3C,AFaI,ADrBE,AU+BR,AF9BkD,ME8B9C,EPvBE,IOuBI,CPvBC,AKPuC,CPoBtC,AOpBuC,CE8BtC,EAAb,AF9BsD,CLOhD,AFaU,ADrBF,AQCoC,GPoB/B,EEbE,GFaG,CDrBD,GAAG,KCqBP,CAAe,CEbhC,AHR+B,CAAC,CGQH,KHRL,GAAiB,CAAnC,CAH6B,CAI7B,MCoBW,CAAoC,KAAK,OAAzC,CAAb;AEZF,AFaE,ADpBE,AU8BR,AF/BuD,KAAvC,CE+BZ,CF/BqD,CPqBnD,AOrBU,CAAA,GPqBN,CAAC,CSUC,GAAuB,SAAnC,ETVM,CAAqB,IAAK,CAAC,eAA3B;AEZH,AOuBH,AFhC2D,GAA3D,GEgCM,QAAQ,GAAG,CAAC,YAAD,EAAe,iBAAf,EAAkC,cAAlC,CAAjB;ATVM,ADpBE,AU+BR,AFhCD,MEgCO,KAAK,ETXA,CSWG,GV/BD,GCoBP,CAAa,ADpBF,CAAC,AU+BI,CAAC,ETXjB,ADpBe,CCoBG,ADpBhB,EAAgB,CAAC,CCoBnB,EDpBsB,IU+Bd,CAAuB,IV/B7B,EAA+B,CAAC,AU+B1B,CAAd,CV/BQ,EAAoC;AGQ1C,AFaG,ADpBK,AU+BV,MAAM,CTfF,EETG,COwBG,GTXC,ASWE,KPxBX,AHPY,CGOG,EOwBI,CAAC,EV/BZ,CGOR,UOwBW,CAAuB,OAAvB,CAAb;APvBC,AFaK,ADpBI,AU+BV,AFhCF,EEgCE,KAAK,CAAC,CFhCC,GEgCP,CTXW,AOrBb,CAAc,CEgCC,GV/BC,AQDhB,CRCiB,CCoBT,AOrBwB,CPqBX,ASWnB,CV/BkB,CQDpB,EPqBQ,AOrBgC,CPqBd,GAAG,ADpBF,CAAC,CAAD,CAAf,ECoBsB,SAAL,CAAe,0BAAf,CACjB,IADiB,EACA,IAAI,CAAC,IADL,EACW,IAAI,CAAC,OADhB,EACyB,KAAK,OAD9B,CAArB;AAED,ASUL,AFhCA,EEgCA,IAAI,AFhCE,CEgCD,IAAL,GAAY,CFhCG,GAAG,EEgClB,QFhC4B,CAAC,SAAS,CAAC,IAAD,EAAO,GAAP,CAAV,CAA5B;ALvBwB,AHwBd,AQAV,SAAO,SRAO,CAAC,AQAR,KRAa,AQAb,ERAG,AQAE,ERAY;AGS1B,AFaM,ADrBQ,AU+BZ,AFhCgB,MPsBZ,KSUK,AFhCO,IPsBH,CDrBD,IQDa,CAAC,CRCR,CU+BlB,EV/BqB,CU+BA,AFhCI,CAAT,CAAiB,MAAjB,CAAwB,ERCP,EAArB,MQD6B,CAAD,EAAI,CAAJ,EAAK;APuB1C,ADrBQ,AU+BT,AFjCgD,IEiChD,MAAM,GAAG,AFjCuC,CAAC,CRAzC,EQA4C,CEiCtC,AFjCkC,GREjC,EU+Bf;AV9BU,AU+BX,AFlCsD,KAAvC,EAAyC,CAAzC,CAAA,aRGE,KAAK,GAAG,sBAAsB,CAAC,IAAvB,CAA4B,CAA5B,CAAd;ACsBV,AOzByD,GAA3D,KPyBM,iBAAJ,EAAkB;AAChB,ADtBQ,AU+BZ,AFlCD,EAED,IPuBM,KSSK,GTTG,CAAC,KDtBG,ICsBZ,CAAmB,ADtBF,CU+BrB,GAAwB,CV/BE,GCsBtB,CDtBY,IAAkB,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,oBAAX,CAA9B,EAAgE;ACuBxE,ADtBU,AU+BZ,IAAA,ETTE,MSSM,GAAG,GV/BC,CAAC,CCsBG,CAAC,ASSA,CV/BD,AU+BE,CV/BD,CAAC,GU+BK,CTTrB,CAAuB,ADtBT,CAAQ,CAAR,CU+BC,CV/BU,AU+B3B,ITTE,CDtB8B,CAAC,KAAjB,IAA0B,KAAK,CAAC,CAAD,CAA/B,GACA,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;ACuBX,ADrBU,AU8BX,QAAM,KAAK,GAAG,QAAQ,CAAC,QAAD,CAAR,CAAmB,KAAnB,CAAyB,eAAzB,CAAd;AFjCJ,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,eAAD,EAA8B;APyB7C,ADrBU,AU8BV,AFlCkD,QEkC9C,CFlC8C,EPyB3C,ESSP,EAAW,CV9BD,GCqBV,AOzBmD,GRInC,EQJkC,CRI/B,CQJ6C,ORIrC,CAAC,cAAT,CAAwB,CAAxB,CAAT;ACsBX,ADrBU,AU8BP,AFlCJ,MEkCI,IAAI,CAAC,AFlCT,KEkCI,GAAa,KAAK,CAAC,CAAD,AFlCP,CEkCX,AFlCY,GAAhB,CAAoB,UAAA,CAAA,EAAC;AEmCjB,AFnCqB,MEmCrB,KAAK,CAAC,CFnCe,CAAC,CAAC,EEmCvB,GAAc,AFnCQ,CAAD,IEmCF,CAAC,CAAD,CAAnB;AT3IuB,AD6GjB,AU+BP,AFpC8B,KAAjC,EAAmC,MAAnC,CRKU,AQLgC,MRK1B,CAAC,GQLyB,CAAA,EAAC,MRKjC,CAAoB,MAApB,EAA4B,IAA5B;AGON,AHNM,AU+BT,AFrC8C,MLYpC,OKZoC,CLY3C,AKZ4C,CLY7B,IHNJ,AQNsC,CAAC,CAAD,CAAN,ERMrC,CAAW,IAAX,CAAgB;AGa1B,AHb2B,AQN6B,ELmBxD,GKnBA,CAAA,OLmBA,CAAY,EHbe,IAAI,CGa/B,CHbiC,CGaC,KHbR;AGU1B,AHVyC,AUgCzC,AFtCyD,GADL,MLiBpD,EOsBS,GPtBT,EHVyC,CGUxB,IHV6B,EAAE,EAAE,AUgClD,CPtBA,EOsBuB;APrBf,AHXkB,AUiCxB,AFvCuD,CAD3D,GEwCI,KPtBM,GOsBE,GVjCA,AUiCG,QPtBL,COsBN,EPtBgC,SAA1B;AAGN,AHbO,AUiCP,IAAA,IAAI,CPpBC,AOoBA,IVtD8B,CAsB7B,AUgCN,EPpBA,COoBa,EPpBE,AOoBf,OPpBA;AACD,AHZO,AUgCN,AFvCJ,IEuCI,KAAK,AFvCA,CEuCC,KAAN,GAAc,EAAd,CFvCJ,CAAsB,IAAtB,EAAwC,GAAxC,EAAgD;ALqB9C,AOmBC,AFvCD,MAAM,KAAK,GAAG,SAAS,CAAC,IAAD,EAAO,GAAP,CAAvB;ADvGF,ACwGE,MAAI,CAAC,IAAI,CAAC,QAAL,CAAc,QAAd,CAAL,EAA8B,IAAI,CAAC,KAAL,CAAW,GAAX;ARMtB,AUiCR,AFtCA,MAAM,KEsCG,CFtCG,GAAG,CRKH,CUiCZ,GAAe,GVjCI,CAAC,AQLI,CAAC,IAAD,EAAO,ERKZ,CAAP,AQLY,CAAxB,IRKmC,EAA3B,EAA+B;AAC7B,AO9GZ,AG+II,AFtCF,IEsCE,EFtCE,CAAC,IAAI,CEsCC,AFtCA,CEsCC,CVjCD,GUiCR,CAAc,EVjCA,AQLX,CRKY,AQLE,CEsCC,CAAC,KAAL,GAAa,AFtCxB,CAAL,CRKU,CAAoB,AQLE,CEsChB,GAAoB,AFtCA,CAAC,IEsCI,CAAC,AFtCV,CAAW,CRKD,EAAhC,AQLsB,CEsC9B,CVjC4C,IAApC;AACA,AUiCR,AFtCF,IEsCE,KFtCK,CAAC,IRKE,CQLH,EAAQ,CEsCC,KFtCT,CAAP,GRKuB,CAAC,IAAd,CAAmB,IAAnB;AACD,AO7GX,AG8IG,AFtCF,aRES,MAGO;AACJ,cAAA,IAAa,CAAC,IAAd,GAAqB,OAAO,CAAC,SAAD,CAA5B;AGcX,AHbS,AO7GX,AG6IE,AFrCF,ELkBE,IOmBM,GFrCC,GLkBG,AOmBE,CPnBD,AH1C0B,CA8B7B,CU+BO,GFrCjB,CAAmB,GLkBP,CKlBZ,CLkB4B,AOmBpB,CFrC6B,GAArC,EEqCiB,AFrC4B,GEqC5B;APlBb,AOmBA,AFrCI,MAAA,EAAA,CLkBC,EOmBJ,AFrCG,OLkBJ,COmBS,AFrCL,CEqCM,AFrCN,CLkBa,GKlBb,CAAA,GEqCc,EPnBQ,CAAC,COmBL,CAAb,AFrCL,CEqCH,AFrCG,GEqCuB,IAAI,CPnBd,AOmBe,CPnBO,EKlBnC,CAAA,CEqCuB,AFrCvB,GEqCoC,IAAb,GAAoB,KAAK,CAAC,KAArD,IPnBiB,CAAjB;AACA,AI3HJ,AG6I+D,AFrCvD,GEoCN,GFpCO,GLmBA,EKnBA,GAAA,ELmBL,AKnBK,CAAA,CAAA,CLmBU,AKnBX,SLmBoB,CAAC,WAAV,CAAsB,6BAAtB,CAAf;AACD,AHdO,AQNF,MAAQ,KAAA,CRMN,EQNM,EAAA,CAAA,CAAA,CAAR,ERMW,IAAI,SAAb;AGgBR,AHfO,AO9GT,AG6IE,WAAS,MAAT,GAAe;AV9BV,AU+BH,AFtCF,EAAA,IAAI,CAAC,ER5BM,EUkEF,CFtCT,CAAW,EROA,CQPX,GROe,AU+BE,CAAC,GV/BC,CAAC,IU+BM,IV/BX,AU+Be,CAAb,CAAf,GV/B+B;AAAE,AO7GrC,AG6II,IAAA,cAAc;AVhCL,AUiCV,AFvCK,MAAA,ERMsD,AQNtD,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,WAAA,CAAA,CAAA;AROA,AO7GR,ACsGQ,MAAC,KAAA,GROI,AQPJ,EAAA,CAAA,CROoB,AQPpB,CROqB,AQPtB,IROK,KAA0B,MAA/B,EAAuC;AACrC,AUgCR,AFxCM,MAAQ,GEwCP,EFxCO,GAAA,EAAA,CAAA,CRQA,AQRA,CAAR,EEwCC,GVhCa,GAAG,IAAI,CAAC,UAApB,CADqC,CAErC;AACA,AO/GV,AG6Ie,WAAA,UAAA,CAAA,IAAA,CAAI,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,8IAAA,EAAA,UAAA,EAAA,4FAAA,EAAA,eAAA,EAAA,oKAAA,EAAA,0EAAA,EAAA,yHAAA,EAAA,gIAAA,EAAA,qBAAA,EAAA,gIAAA,EAAA,qBAAA,EAAA,qEAAA,CAAA,EAAA,CAAA,8IAAA,EAIuB,UAJvB,EAI8C,4FAJ9C,EAOoD,eAPpD,EAcR,oKAdQ,EAiBoD,0EAjBpD,EAkBkD,yHAlBlD,EAsBkD,gIAtBlD,EA2ByB,qBA3BzB,EA4BM,gIA5BN,EAiCyB,qBAjCzB,EAkCM,qEAlCN,CAAA,CAAA,CAAJ,EAIqB,MAJrB,EAIsC,YAJtC,EAOyC,eAPzC,EAQH,QAAQ,CAAC,GAAT,CAAa,UAAC,IAAD,EAAO,CAAP,EAAQ;AVrCvB,AUsCE,AFhDV,MAAI,CAAC,IAAI,CAAC,CEgDA,CAAC,MAAM,AFhDZ,CEgDa,AFhDC,MEgDT,IAAkB,AFhDvB,CAAL,EAAgC,CEgDA,CAAC,EFhDG,CAAC,KAAL,CAAW,CEgDf,CAAgB,CFhDZ,KEgDJ,CAAlB,GACI,UAAA,CAAA,IAAA,CAAI,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,oCAAA,EAAA,GAAA,EAAA,6BAAA,CAAA,EAAA,CAAA,oCAAA,EACe,GADf,EACuB,6BADvB,CAAA,CAAA,CAAJ,EACkB,CADlB,EACuB,IADvB,CADJ,GAII,UAAA,CAAA,IAAA,CAAI,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAJ,CAJJ;AVrCF,AO9GV,AGuJsB,AFnDpB,KE8CU,CARG,AFtCP,CAAC,CEuD0D,EFvDvD,EEsCG,EAkBiD,CFxD/C,GAAG,CEsCL,EAsBgD,EF5DnD,GAAgB,CEsCb,AFtCb,EEiEoB,QAAQ,KAAK,SA3BpB,EA4BI,MA5BJ,EAiCO,QAAQ,KAAK,SAjCpB,EAkCI,MAlCJ,CAAA;APbb,AOoDC,AF5ED,ELwBA,COaA,GFrCM,CAAC,GAAG,KAAK,ELwBA,CAAC,AKxBE,GLwBH,EAAU,AKxBf,GAAgB,CAA1B;ALyBE,AHfM,AO9JV,AGiOC,AF5EC,SLwBO,AKxBA,KAAK,CAAC,CRSD,EGeV,CKxBK,CRSS,AQTE,CLwBC,AHfF,GGef,YHfU,KAAyB,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;AGgBpE,AHfQ,AQVU,IAAA,KLyBb,CKzBmB,EAAE,ERUlB,EGeR,GAAe,AHfF,GGeK,CAAC,WAAnB;AACD,AHfS,AU2EZ,AFtFoB,GAAX,EAA0B,IEsF1B,KV3EG,CQXwB,CAAD,EAAI,CEsFvC,AFtFmC,CRWjB,CAAC,AQXqB,CEsFrB,WV3EP,CAAoB,YAAY,EAAhC,EAAoC,IAApC;AGiBV,AHhBS,AU2ET,AFvF2C,MEuFvC,KAAK,AFvFkC,GEuFxB,EAAnB,AFvFgD,GAAG,CAAR;AEwF3C,AFxFoD,GAA7C,EAA+C,CEwFlD,KFxFG,CACL,EEuFU,GAAuB,KFvFhC,GAAD,CEuFF,CFvFsB,CAApB,EAAqB;ARYf,AU4ER,AFvFI,MEuFE,IAAI,CFvFN,CRWI,CU4Ec,CFvFf,CEuFP,AFvFQ,MAAJ,CAAW,GRWM,EQXD,CRWI,AQXH,IAAN,CRWP,AQXkB;ARYlB,AU4ER,AFxF4B,MEwFtB,AFxFsB,IEwFlB,EFxFwB,CEwFZ,CFxFc,CEwFpC,EV5Ea,KAAL,CAAW,IAAX,CAAgB;AAAC,AQZC,KAAX,EAA0B,ORYhB,GQZiB,CRYb,AQZY,ERYV,AQZc,CAAJ,EAAK,GRYtB;AAAe,AU6EvC,AFzFmD,WEyF1C,EFzF0C,CRYZ,EQZe,CAAC,CAAD,EEyFtD,AFzF0D,CEyFrB,AFzFiB,CEyFtD,AFzFmD,EEyFD;AV7E1B,AU8EtB,AF1F0D,IE0F1D,CF1Fa,CAAX,CAAA,CE0FE,CAAC,IV9EC,AU8EN,CAAU,CVzFiC,CAYrC,GU6EN;AP3DF,AHjBQ,AU6EN,AF3F4D,EL+B9D,CKjCO,CE6FL,CF1FA,EAHK,CAAP,IE6FU,GAAG,CP5DC,CAAC,IAAD,EAAe,CO4D3B;AP3DA,AO4DA,AFzFH,IL6BG,IAAI,AO4DE,CP5DD,EO4DI,GAAG,GP5DZ,CAAc,CO4DG,IP5DE,SAAL,GAAiB,KO4DnB,EAAZ,sBP5DA;AHjBM,AU8EN,IAAA,KAAK,GAAA,IV9EK,IAAI,CAAC,KU8EV,CAAO,KV9EF,AU8EL,EAAY,CAAE,EV9EY,IAAzB,EAA+B;AGkBrC,AHjBS,AU6EY,AFxFzB,IL4BI,EO4DqB,CAAC,CP5DlB,CAAC,AO4DmB,AFxFnB,CEwFoB,CAAC,CAAF,EV7Ef,CU6EqB,EP5D9B,CAAc,AHjBW,AU6EQ,CV7EP,AU6EQ,GFxFtC,CL4BuB,AHjBV,AU6EU,AFxFA,GRWc,CQXrC,CRWa,CQXsB,CL4BjB,GAAe,6BAA7B;AACD,AHjBQ,AO1JX,AGsO4C,AFvF1C,MEuF0C,AFvFtC,CEuFuC,EAAE,AFvFtC,CEuFuC,CAAC,CAAF,AFvFnC,CRSF,AQTR,EEuFmD,GAAG,CV5EvC,AU4EwC,GAAlC;APzDrB,AHlBU,AU2EkD,MAAA,CAAC,EAAE,KV3ErD,aAAa,CAAC,IAAd,CAAmB,IAAnB;AACA,AU0EW,AFtFrB,KEsFmB,CAAZ,CAAL,IFtFO,GRYC,EQZV,CAAe,ERYA,MQZf,EAA+B;ARatB,AU0ER,AFtFC,QAAI,IAAI,CAAC,MAAL,CAAY,GAAZ,EAAiB,QAAQ,CAAC,MAA1B,MAAsC,QAA1C,EAAoD;AAClD,MAAA,GAAG,IAAI,QAAQ,CAAC,MAAhB;ARYI,AU0ER,AFrFG,KAFD,MEuFO,AFrFA,CRWD,SAAS,EU0EjB,GAAqB;AVzEd,AU0EL,AFrFE,IEqFF,KAAK,CAAC,CV/FF,CQUI,IAAI,CRWD,CU0EN,CAAL,CAAiB,CAAjB,AFrFQ,CAAU,EEqFG,MAAM,CAAC,KAAK,KAAN,CAA3B,IFrFwC,QAAtB,GAA8B,MAA9B,GAAqC,IAAI,CAAC,MAAL,CAAY,GAAZ,CAA/C,CAAN;ARYI,AU0EP,AFrFE,gBRWS,CAAC,GAAG,CAAC,CAAT;AGkBR,AK5BC,EL4BD,eAAe,CAAC,GAAD,EAAc;AAC3B,AHlBM,AU0ER,IPxDE,GAAG,CAAC,GOwDG,KPxDP,CAAa,EHlBA,CAAC,CAAC,CGkBG,EHlBC,AU0ErB,CAAuB,GV1Ec,CAAC,CU0EtC,CPxDe,COwDqB,CV1Ef,CGkBW,AHlBW,OAAtB,CAA8B,MAA9B,EAAsC,CAAC,GAAG,CAA1C,CAAN,MAAwD,CGkBrE,AHlBsE,CAAhE,EAAmE;AACjE,AU0ER,AFrFF,WEqFS,AFrFA,QAAT,CAAkB,CAAlB,EEqFE,AFrFyB;AL6BzB,AHjBQ,AQXR,QAAM,CL4BD,IK5BM,GL4BX,AK5Bc,CAAC,CAAC,CL4BD,GAAG,AK5BJ,CL4BK,AK5BE,IAAI,CAAC,EL4B1B,IK5BqB,CAAY,GAAZ,CAAP,CAAd;AL6BA,AHjBQ,AUyER,IPxDA,GAAG,CAAC,KOwDK,EPxDT,GAAc,KAAK,EOwDnB,CAA8C,CAA9C,EAA2D,GPxD3D;AACD,AHjBS,AUyEN,AFrFF,MEqFE,EFrFE,KAAJ,CEqFU,CFrFC,EEqFE,KAAX;AVxEM,AOxJZ,AGiOM,AFrFA,MEqFA,AFrFA,GAAG,CEqFC,CAAC,EFrFE,EEqFP,CAAU,EFrFE,CRYD,AQZE,CAAD,CEqFZ,AFrFO,CAAS,CEmFyC,CVvEnD,AU0EN,CV1EiB,GQZjB,CRYM,CAAgB;AGkB1B,AHlB2B,AQXxB,EL6BH,QAAQ,CAAC,KAAD,AHlBmB,EGkBJ,EHlBQ,EAAE,MAAP;AGmBxB,AHnBuC,AU2ErC,MAAA,GPxDG,EOwDE,GAAA,EV3EgC,KAAK,EGmB5C,AHnB8C,CAAC,EGmBzB,EOwDf,CAAO,EPxDd,GOwDO,CAAL;APvDH,AHpByB,AU4EtB,AFtFF,MEsFE,KAAK,AFtFA,CEsFC,GV5EA,CQVR,IEsFO,CAAL,GAAe,QAAA,CAAA,EAAA,EAAQ,KAAK,CAAC,QAAD,CAAb,CAAf;AV3EM,AOhJZ,AG4NM,AFtFH,MEsFG,CAAC,CAAC,MV5EI,SAAS,AU4Ef,GANyD,CAMpC;APvDzB,AHpBS,AO/HX,EJmJE,MAAM,GAAA;AACJ,AHpBK,AO/HT,AG0MM,AFtFJ,MEsFI,GFtFG,EL+BE,KOuDK,uBPvDO,KAAK,cAAjB,CAAP,EAAyC;AACvC,AHpBC,AO/HP,AG0MK,AFvFM,IAAA,KAAK,EAAA,CLgCJ,IKhCH,KLgCY,GAAG,KAAK,cAAvB;AACA,AHpBD,AO/HL,AG0MG,AFxFe,CDlHjB,GCkHiB,CR9HgD,CA6I9D,COjIG,CAAC,GJmJG,CKjCe,EAAA,WLiCpB,AInJC,CAAN,EJmJ2B,GInJG,MAAM,CAAC,IJmJhC,aInJ+B,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AJoJM,AIlJN,ACgHS,GAAP,GLkCI,SAAS,CAAC,IAAD,CAAT;AACD,AOsDH,AFxFD,WEwFU,IAAT,GAAa;AVzEX,AU0EA,IAAA,IAAI,CV1EC,AU0EA,IAAL,CAAU,CV1EC,CAAX,GU0EA,CV1EgB,aAAhB,EAA+B;AGoB/B,AHnBE,AU0EF,IAAA,EV1EE,CAAC,CAAC,CU0EC,CPvDC,EOuDE,GPvDG,COuDC,CAAC,CPvDC,AHnBZ,CAAc,CU0ER,EAAR,CPvDmB,OHnBjB,CAA0B,CAA1B,KGmBF;AHlBC,AU0EF;APvDC,AHlBD,AO/HI,MAAM,EJiJL,EIjJS,GJiJJ,AIjJO,CAAC,IJiJH,GIjJE,EAAgC,GAAG,MJiJnD,AIjJgB,EJiJQ,GIhJxB,IAAI,8BAAJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AJkJD,AI/IN,AGsME,WAAS,IAAT,GAAa;APtDV,AHzKgB,AUgOjB,IAAA,IAAI,CAAC,IAAL,CAAU,KAAV;AACA,IAAA,KAAK,GAAG,IAAI,CAAC,GAAL,EAAR;APvDA,AOwDD,QPxDK,WAAW,CAAC,KAAD,CAAf,EAAwB;AACtB,UAAI,KAAK,KAAK,KAAK,KAAnB,EAA0B;AACxB,AHpBR,AU2EE,MV3EI,KU2EK,EPvDE,CHpBC,GAAG,CAAC,GAAD,EAAc,AU2E7B,CAAsB,CPvDhB,CAAkB,GHpBT,EGoBT,EOuDN,CV3EwD,CU2ElB;APtDjC,AHpBL,AU2EE,IAAA,IV3EI,AU2EA,CAAC,IV3EI,AU2ET,CAAU,EV3EE,GAAG,AU2Ef,CV3EgB,MAAJ,GAAa,MAAM,CAAC,MAAlC;AGqBG,AHpBH,AU2EE,IAAA,CP3DA,IHhBK,AU2EA,EPvDE,COuDC,EV3EE,CGoBC,GHpBG,CAAT,CGoBW,COuDhB,EV3EmB,GAAG,CAAC,KGoBK,AHpBT,CAAU,KAAV,MAAqB,MAA1C,YGoBS,EAAqC;AAC1C,AHpBL,AO9HM,AGyMH,CV9EJ,GU8EI,EHzMS,GAAG,EJkJL,CIlJQ,CAAC,CGyMN,MHzMK,EAAgC,GAAG,MAAnC,EJkJb,CAA4B,EIjJ9B,GJiJE,CIjJE,iCAAJ,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;AJmJF,AOuDF,KPzDQ,MAEA,IAAI,KAAK,YAAY,IAArB,EAA2B;AAChC,AHCC,MAAM,KGDF,YAAL,CAAkB,EHCS,GGD3B,AHC+B,IAAD,IAAwB,IAAI,CAAC,KAAL,KAAe,CAAC,CAArE,EAEP;AGFK,AHGL,AUmDE,KPxDS,COwDH,KPtDG,IAAI,IOsDM,GAAG,GPtDC,CAAC,KAAD,AOsDjB,CPtDG,EAAuB,UOsDV,CAAC,EAAD,EAAoB;APrDtC,QOqDqB,CAAA,EPrDhB,COqDgB,EAAA,CAAA,YPrDrB,CAAsB,KAAtB;AACD,KAFM,GOsDmB,CAAA,EPpDnB,COoDmB,EAAA,CPpDf,AOoDe,KPpDV,KAAK,aAAd,EAAuB;AAC5B,QOmD2B,CAAA,EPnDtB,COmDsB,EAAA,CAAA,CPnD3B,GAAa,aAAb;AACA,AOkD2C,WPlDtC,AOkDsC,KPlD3C,KOkD2C,CAAA,IAAA,CAAI,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,0EAAA,EAAA,IAAA,EAAA,iDAAA,EAAA,UAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,0EAAA,EAET,IAFS,EAEH,iDAFG,EAGN,UAHM,EAGM,mBAHN,CAAA,CAAA,CAAJ,EAEN,CAFM,EAEA,CAFA,EAGd,YAHc,EAGS,CAHT,CAAA;APjD5C,AHDE,AUuDJ,GALD,EPpDS,CHEE,KGCF,OHDc,GAAG,MAAM,QAAQ,CAAC,aAAT,CAAuB,EAAvB,CAA3B;AGED,AHAN;AGCM,AOqDJ,SAAO,EPrDE,UOqDF,EPrDH,CAAkB,KAAlB;AACD,AOoDU,WAAA,UAAA,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,gIAAA,EAAA,mBAAA,EAAA,oHAAA,EAAA,mBAAA,EAAA,8DAAA,EAAA,gEAAA,EAAA,oBAAA,EAAA,MAAA,CAAA,EAAA,CAAA,gIAAA,EAIa,mBAJb,EAKE,oHALF,EAUa,mBAVb,EAWE,8DAXF,EAeQ,gEAfR,EAyBZ,oBAzBY,EA2B+C,MA3B/C,CAAA,CAAA,CAAJ,EAIK,CAAC,IAAI,CAAC,MAJX,EAKE,IALF,EAUK,CAAC,IAAI,CAAC,MAVX,EAWE,IAXF,EAeG,SAfH,EAgBP,KAAK,CAAC,GAAN,CACA,UAAC,EAAD,EAAc,KAAd,EAAmB;APpExB,UOoEQ,CAAA,GAAA,EAAA,CAAA;UAAG,CAAA,GAAA,EAAA,CAAA;APlEJ,EAAA,QAAQ,AOkED,CPlEE,AOkEF,GAAA,CPlEC,COkED,CPlEY,AOkEZ;APjEb,AOkEM,SPlED,IOkEC,GPlEN,CAAa,MOkEP,CAAA,GPlEN,AOkEM,CPlEmB,AOkEhB,YPlET,CAAsC,GOkE7B,CPlET,EAA4C,EOkEnC,GPlEwC,OAAjD,MOkES,GAAA,oBAAA,CAAA,CAAA,yBAAA,EAAA,MAAA,EAAA,KAAA,EAAA,8BAAA,EAAA,uFAAA,EAAA,wBAAA,CAAA,EAAA,CAAA,yBAAA,EACW,MADX,EACmB,KADnB,EAC0B,8BAD1B,EAID,uFAJC,EAK6B,wBAL7B,CAAA,CAAA,CAAH,EACa,CADb,EACqB,CADrB,EAC4B,CAD5B,EAGI,KAAK,KAAK,QAAV,GAAqB,MAArB,GAA8B,aAHlC,EAKY,aAAa,CAAC,KAAD,CALzB,CAAA;APjEP,AOuEiB,KARZ,CAhBO,EA2BT,QAAQ,KAAK,SAAb,GAAyB,EAAzB,GAA8B,aAAa,CAAC,KAAK,CAAC,QAAD,CAAN,CA3BlC,CAAA;AA4BZ,GA5BD;AP7CQ,AO0ET,EP1ES,YAAY,CAAC,KAAD,EAAY;AAC9B,QAAI,KAAK,KAAL,KAAe,KAAnB,EAA0B;AACxB,AO0EN,SAAS,QAAT,GAAiB;APzEZ,AO0EH,MAAI,QAAQ,GAAyC,SAArD;AACA,MAAM,KAAK,GAAG,aAAA,CAAA,cAAA,EAAd;AP1EE,AO2EF,MAAM,GP3EC,KAAL,IO2EgB,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAArB;AACA,EAAA,YAAY,CAAC,eAAb,GAA+B,MAA/B;AP3EE,AO4EF,EAAA,OP5EO,KO4EK,CAAC,EP5EX,CAAc,KAAd,QO4EF,CAA8B,SAA9B,EAAyC,OAAzC;AACA,MAAM,SAAS,GAAsD;AP5EnE,AO6EA,IAAA,KP7EK,AO6EA,EAAE,GP7EP,GAAa,KAAb,IO6EQ,CAAD,EAAI,CAAJ,EAAK;AP5Eb,AO4EkB,aAAC,QAAQ,GAAG,SAAZ;AAAsB,KAD4B;APzE7D,AO2EN,EP3EM,EO2EN,UP3EkB,AO2ER,CP3ES,CO2EP,IP3EM,EAAe,cO2EpB,CAAD,EAAI,CAAJ,EAAK;AP1EjB,AO0EsB,UP1EhB,GO0EgB,CP1EZ,AO0Ea,GP1EV,AO0Ea,EAAJ,GP1EJ,EO0Ee,OP1EpB,CAAe,AO0Ec,CAAC,CAAV,IAAe,CAA1B,CAAA,GP1EtB;AACA,AOyEkD,IPzElD,COuEmE,IPvE9D,GAAG,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,KAA7B,CAFiC,CAGjC;AACA,AOwEA,IAAA,SAAS,EAAE,mBAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,CAAC,GAAG,CAAJ,KAAU,QAAS,CAAC,CAAV,IAAe,CAAzB,CAAA;APvErB,AOuEgD,KAHmB,KPpE7D,aAAa,GACf,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,MAAM,CAAC,KAAD,CAD9C;AOwEA,IAAA,OAAO,EAAE,iBAAC,CAAD,EAAI,CAAJ,EAAK;APtEd,AOsEmB,QPtEf,IAAI,COsEW,CAAC,GPtEP,AOsEU,CAAJ,IPtED,COsEW,MPtEhB,CAAa,COsEY,CAAC,CAAV,IAAe,CAAzB,CAAA,MPtEf,IACA,IAAI,CAAC,QAAL,KAAkB;AAAE,AHArB,AUqE2C,KAJqB,CVjE1D,sBAAsB,GAC/B,4IADG;AGDH,AOuEA,IAAA,EPtE8C,OOsErC,EAAE,mBAAC,CAAD,EAAI,CAAJ,EAAK;APrEd,AOqEmB,aAAA,CAAC,GAAG,EAAJ,KAAW,QAAS,CAAC,CAAV,IAAe,CAA1B,CAAA;APpEnB,AOoE+C;APnE/C,AO8DiE,GAArE;AP7DK,QAAA,IAAa,CAAC,IAAd,GAAqB,aAArB;AACF,AOmEH,OPzEE,IOyEO,EPnEA,KOmET,CAAiD,EAAjD,EAAkE;APlE9D,AOmEF,QAAI,GPnEG,KOmEP,EAAc,KPnEZ,CAAkB,QAAQ,CAAC,cAAT,CAAwB,aAAxB,CAAlB;AACD,AOmEC,UAAM,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,GAAJ,CAAtB;;APlEF,AOmEE,SPnEG,COmEC,IPnEN,AOmEE,EAAU,CPnEC,KAAb;AACD,AOmEW,YAAA,EAAA,GAAA,QAAA;AAAA,YAAE,CAAA,GAAA,EAAA,CAAA,CAAF;APjEJ,AOiEI,EPjEJ,UOiES,CAAA,GAAA,EAAA,CAAA,CAAL,IPjEkB,CAAC,KAAD,EAAsB;AAClD,AOiEI,QAAA,EPjEE,GOiEG,CAAC,IPjEI,GAAG,AOiEb,CAAc,CAAd,EAAiB,CPjEC,AOiElB,EAAoB,KPjEP,AOiEY,CPjEC,QOiE1B,OPjEa,CAA6B,KAA7B,CAAjB;AOkEI,QAAA,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAJ;APjEJ,AOkEI,QPlEA,AOkEA,KPlEK,KAAL,AOkEU,YPlEY,kCAAtB,IACA,KAAK,KAAL,CAAW,QAAX,KAAwB,QAD5B,EACsC;AACpC,WAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,MAAxB;AACD,AOgEG,KPnEJ,MAGO,COgEC,QAAJ,EAAc;AP/DhB,AOgEI,UAAA,YAAY,CAAC,SAAb,GAAyB,KAAK,CAAC,IAAN,CAAW,QAAQ,CAAC,CAApB,EAAuB,QAAQ,CAAC,CAAhC,CAAzB;AP/DJ,AOgEI,UAAA,YAAY,CAAC,KAAb;AP/DJ,AOgEG;AP/DH,AOgEC;AP/DD,AOgED,YPhEO,QAAQ,GACV,IAAI,kCAAJ,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;AOiEH;AP/DG,YAAM,QAAQ,GAAG,QAAQ,CAAC,MAAT,EAAjB;AOgEJ,SAAO,YAAA;AP/DH,AO+DS,MP/DT,KO+DS,GP/DD,CAAC,MAAT,AO+DS,CP/DO,AO+DP,IAAA,CP/DY,AO+DR,CP/DS,MAAtB,UO+Da,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,qdAAA,EAAA,2BAAA,EAAA,+QAAA,CAAA,EAAA,CAAA,qdAAA,EAuBR,2BAvBQ,EAgDV,+QAhDU,CAAA,CAAA,CAAJ,EAiBH,KAAK,CAAC,IAAN,CACA;AAAE,MAAA,MAAM,EAAE;APhFhB,AOgFM,KADA,EAEA,IPjFD,MOiFE,CAAD,EAAI,CAAJ,EPjFN,AOiFW,CPjFO,QAAlB;AOkFQ,aAAA,UAAA,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,wBAAA,EAAA,uBAAA,CAAA,EAAA,CAAA,wBAAA,EAC+B,uBAD/B,CAAA,CAAA,CAAJ,EACQ,MAAM,CAAC,YAAP,CAAoB,KAAK,CAAzB,CADR,CAAA;APjFR,AOmFS,KALH,CAjBG,EAyBL,GPtFC,EOsFI,CAAC,EPtFV,EOsFI,CPtFS,AOuFT,QPvFJ;AACD,AOsFO,MAAA,MAAM,EAAE;APrFjB,AOqFO,KADA,EAEA,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,UAAA,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,2CAAA,EAAA,2BAAA,EAAA,iCAAA,CAAA,EAAA,CAAA,2CAAA,EAEA,2BAFA,EAkBR,iCAlBQ,CAAA,CAAA,CAAJ,EAEG,CAFH,EAGJ,KAAK,CAAC,IAAN,CAAW;APvFjB,AOuFmB,EPvFnB,MOuFmB,MAAM,EAAE,EPvFX,CAAC,KAAD,EAAyB;AAC/C,AOsFuB,OAAX,EAA2B,UAAC,CAAD,EAAI,CAAJ,EAAK;APrF5C,AOsFY,eAAO,QAAQ,IAAI,QAAQ,CAAC,CAAT,KAAe,CAA3B,IAAgC,QAAQ,CAAC,CAAT,KAAe,CAA/C,GACH,YADG,GAEH,UAAA,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,8DAAA,EAAA,qDAAA,EAAA,qDAAA,CAAA,EAAA,CAAA,8DAAA,EAOC,qDAPD,EASmB,qDATnB,CAAA,CAAA,CAAJ,EAEa,UAAC,CAAD,EAAc;APzF3C,AO0FsB,UAAA,QAAQ,GAAG;APzFjC,AOyFmC,YAAA,CAAC,EAAA,CAAH;APxFjC,AOwFsC,YAAA,CAAC,EAAA;APtFvC,AOsFiC,WAAX;APrFtB,AOsFsB,UAAA,YAAY,CAAC,SAAb,GAAyB,KAAK,CAAC,IAAN,CAAW,CAAX,EAAc,CAAd,CAAzB;APrFtB,AOsFsB,UAAA,UAAU;APrFhC,AOsFsB,UAAA,YAAY,CAAC,KAAb;APrFtB,AOsFqB,QPtFjB,CAAC,AO+EW,EASM,GPxFZ,CAAC,COwFgB,CAAC,KPxFvB,AOwFiB,CPxFH,AOwFe,CAAZ,EAAe,CAAf,CPxFE,AO+ER,CAFJ,IP7EP,CAAL,EAAgC;AAC9B,AO0FS,OAfC,CAHI,CAAA,EPxET,KAAL,GAAa,EAAb;AACA,AO2FK,KAtBD,CAzBK,CAAA,IP5CJ,KAAL;AACD,AOmGF,GAxDD,EPzDiD,CAgB/C;AACA,AOiGH;;AAED,IAAM,QAAQ,GAAG;APlGb,AOmGF,EAAA,OAAO,CPnGC,COmGC,QPnGQ,GAAG,KAAK,KAAvB;AACA,AOkGS,IAAA,IPlGL,AOkGS,EAAE,OPlGF,EOkGN,CPlGS,CAAhB;AACA,AOiG0B,IAAA,IPjGtB,EOiG4B,EAAE,IPjGlC,MOiG4C;AAArC,GADM;AP9Fb,AOgGF,EAAA,OPhGO,EOgGE,EAAE,EPhGE,IAAX,IAAmB,KAAnB,EAA0B;AACxB,AO+FS,IAAA,IAAI,EAAE,uBAAR;AP9FP,AO8FwC,IAAA,EP9FxC,IO8F8C,EAAE,EP9FxC,GAAG,OO8FiD,EP9FxC,CAAC,SAAD,CAApB,CAFwB,CAIxB;AO4FO,GAFI;APzFX,AO4FJ,EAAA,MAAM,EP5FE,AO4FA,QP5FQ,KAAK,SAAjB,EAA4B;AAC1B,AO2FI,IAAA,IP3FJ,AO2FQ,EAAE,MP3FF,GAAG,IAAI,EO2Fb,MP3FS,CAAa,KAAK,OAAlB,CAAX;AACA,AO0F2B,IAAA,IP1F3B,EO0FiC,EAAE,KP1F1B,CAAC,GO0FkC,CP1F5C,CAAe,QAAf;AO0FE,GAHO;APtFT,AO0FN,EAAA,KAAK,EAAE,GP1FG,SAAS,KAAK,CAAlB,EAAqB;AACnB,AOyFC,IAAA,IAAI,EPzFL,AOyFO,OAAR,CPzFS,CAAC,cAAT,CAAwB,IAAxB;AACD,AOwFiB,IAAA,KP1FlB,CO0FwB,EAAE,GPxFnB,KOwF2B;APvFhC,AOuFD,GAJQ,OPnFP,QAAQ,CAAC,eAAT,CAAyB,SAAS,CAAC,SAAS,GAAG,CAAb,CAAlC;AACD,AOuFP,EAAA,IAAI,EAAE;APtFD,AOsFG,IAAA,IAAI,EAAE,MAAR;AAAgB,IAAA,MAAM,EAAE,OAAO;APrFjC,AOqFE,GALS,GPhFX,QAAQ,CAAC,QAAT,CAAkB,IAAlB;AACA,AOqFJ,EAAA,IPrFI,EOqFE,EAAE,IPrFI,CAAC,MAAT;AACA,AOoFM,IAAA,EPpFN,EOoFU,EAAE,KPpFH,UOoFL;APnFL,AOmF8B,IAAA,MAAM,EAAE,UAAU;AAA3C,GANO;AP3Eb,AOkFF,EAAA,KAAK,CPlFC,COkFC,QPlFQ,GAAG,SAAS,CAAC,MAA1B,EAAkC;AAChC,AOiFK,IAAA,IAAI,EAAE,OAAR;APhFH,AOgFoB,IAAA,EPhFpB,IOgF0B,EAAE,GPhFnB,CAAC,IOgF0B,EPhFpC,GAAmB,SAAnB;AACA,AO+EG,WP/EE,KAAL,CAAW,QAAQ,IAAI,QAAQ,CAAC,OAAhC;AACD,AOuEY,CAAjB;APtEG;AOgFH,IAAM,UAAU,GAAG,SAAb,UAAa,GAAA;AP9EjB,AO+EA,EP/EA,KAAK,CAAC,CO+EN,QP/EM,EO+EN,CP/EwB,AO+ExB,KP/E6B,CO+E7B,CACE,OPhFG,EAAiC,COgFpC,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,+PAAA,EAAA,gKAAA,EAAA,sBAAA,CAAA,EAAA,CAAA,+PAAA,EAcG,gKAdH,EAgCC,sBAhCD,CAAA,CAAA,CAAJ,EAOQ,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,GAAzB,CACA,UAAC,EAAD,EAAc;APvFtB,QOuFU,CAAA,GAAA,EAAA,CAAA,CAAA,UPtFN,KAAK,SAAL,CAAe,UADnB,EACgC,SAAS,CAAC,WAD1C,EACwD,KAAK,OAD7D;AAED,QOqFgB,IAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACL,WAAA,UAAA,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,gFAAA,EAAA,8BAAA,EAAA,6CAAA,CAAA,EAAA,CAAA,gFAAA,EAEa,8BAFb,EAE6C,6CAF7C,CAAA,CAAA,CAAJ,EAEgB,CAFhB,EAE6C,IAF7C,CAAA;APnRO,AOuRN,GANH,CAPR,EAqBM,MAAM,CAAC,OAAP,CAAe,QAAf,EAAyB,GAAzB,CACA,UAAC,EAAD,EAAgB;APhG1B,QOgGY,CAAA,GAAA,EAAA,CAAA,CAAA;QAAK,MAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACL,WAAA,UAAA,CAAA,IAAA,CAAI,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,gDAAA,EAAA,uCAAA,EAAA,sCAAA,CAAA,EAAA,CAAA,gDAAA,EAIC,uCAJD,EAMU,sCANV,CAAA,CAAA,CAAJ,EAEa,cAAA,CAAA,QAAA,CACP,MAAM,CAAN,KAAY,MAAM,CAAC,QAAP,CAAgB,IAA5B,GAAmC,EAAnC,GAAwC;AAAE,MAAA,OAAO,EAAE;AAAX,KADjC,CAFb,EAMM,MAAM,EANZ,CAAA;AAQC,GAVH,CArBN,CADF,EAoCE,QAAQ,CAAC,IApCX,CAAA;AAqCC,CAtCH;;AAwCA,IAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAArB,EAA2B;AACzB,EAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,SAAvB;AACD;AP3GK,MAAO,oBAAP,CAA2B;AAO/B,AOqGF,EPrGE,QOqGQ,GPrGR,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AAH1E,AOyGF,MAAM,CAAC,EPzGL,KAAA,GAAiB,MOyGnB,CAAwB,EPzGtB,MOyGF,EAAkC,UAAlC;APxGU,AOyGV,MAAM,CAAC,EPzGG,cAAA,AOyGV,CAAwB,EPzGY,KOyGpC,EAAiC,EPzGvB,QOyGV;AACA,MAAM,CAAC,gBAAP,CAAwB,YAAxB,EAAsC,UAAtC;APvGI,AOwGJ,MAAM,CAAC,CPxGC,OAAO,CAAC,MAAR,COwGR,CAAwB,GPxGG,CAAnB,GOwGR,CPxGgC,COwGC,MPxGM,CAAC,CAAD,CAAP,COwGhC,IPxG+C,EAAvC,IAA6C,OAAO,CAAC,CAAD,CAAP,KAAe,EAAhE,EAAoE;AAClE,YAAM,IAAI,KAAJ,CACF,yDADE,CAAN;AAED;;AACD,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,OAAf;AACD;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAe;AACrB,SAAK,cAAL,GAAsB,KAAtB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AACvC,YAAM,SAAS,GAAG,KAAK,cAAvB;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,MAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,QAAI,KAAK,cAAL,KAAwB,cAA5B,EAAsC;AACpC;AACD;;AACD,UAAM,KAAK,GAAG,CAAC,CAAC,KAAK,cAArB;;AACA,QAAI,KAAK,KAAL,KAAe,KAAnB,EAA0B;AACxB,UAAI,KAAJ,EAAW;AACT,aAAK,OAAL,CAAa,YAAb,CAA0B,KAAK,IAA/B,EAAqC,EAArC;AACD,OAFD,MAEO;AACL,aAAK,OAAL,CAAa,eAAb,CAA6B,KAAK,IAAlC;AACD;;AACD,WAAK,KAAL,GAAa,KAAb;AACD;;AACD,SAAK,cAAL,GAAsB,cAAtB;AACD;;AAxC8B;AA2CjC;;;;;;;;;;;;;AASM,MAAO,iBAAP,SAAiC,kBAAjC,CAAmD;AAGvD,EAAA,WAAA,CAAY,OAAZ,EAA8B,IAA9B,EAA4C,OAA5C,EAA0E;AACxE,UAAM,OAAN,EAAe,IAAf,EAAqB,OAArB;AACA,SAAK,MAAL,GACK,OAAO,CAAC,MAAR,KAAmB,CAAnB,IAAwB,OAAO,CAAC,CAAD,CAAP,KAAe,EAAvC,IAA6C,OAAO,CAAC,CAAD,CAAP,KAAe,EADjE;AAED;;AAES,EAAA,WAAW,GAAA;AACnB,WAAO,IAAI,YAAJ,CAAiB,IAAjB,CAAP;AACD;;AAES,EAAA,SAAS,GAAA;AACjB,QAAI,KAAK,MAAT,EAAiB;AACf,aAAO,KAAK,KAAL,CAAW,CAAX,EAAc,KAArB;AACD;;AACD,WAAO,MAAM,SAAN,EAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,KAAT,EAAgB;AACd,WAAK,KAAL,GAAa,KAAb,CADc,CAEd;;AACC,WAAK,OAAL,CAAqB,KAAK,IAA1B,IAAkC,KAAK,SAAL,EAAlC;AACF;AACF;;AA1BsD;;;;AA6BnD,MAAO,YAAP,SAA4B,aAA5B,CAAyC,GAE/C;AACA;AACA;AACA;;;;AACA,IAAI,qBAAqB,GAAG,KAA5B;;AAEA,IAAI;AACF,QAAM,OAAO,GAAG;AACd,QAAI,OAAJ,GAAW;AACT,MAAA,qBAAqB,GAAG,IAAxB;AACA,aAAO,KAAP;AACD;;AAJa,GAAhB,CADE,CAOF;;AACA,EAAA,MAAM,CAAC,gBAAP,CAAwB,MAAxB,EAAgC,OAAhC,EAAgD,OAAhD,EARE,CASF;;AACA,EAAA,MAAM,CAAC,mBAAP,CAA2B,MAA3B,EAAmC,OAAnC,EAAmD,OAAnD;AACD,CAXD,CAWE,OAAO,EAAP,EAAW,CACZ;;AAKK,MAAO,SAAP,CAAgB;AASpB,EAAA,WAAA,CAAY,OAAZ,EAA8B,SAA9B,EAAiD,YAAjD,EAA2E;AAL3E,SAAA,KAAA,GAA2C,SAA3C;AAEQ,SAAA,cAAA,GAAoD,SAApD;AAIN,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,YAAL,GAAoB,YAApB;;AACA,SAAK,kBAAL,GAA2B,CAAD,IAAO,KAAK,WAAL,CAAiB,CAAjB,CAAjC;AACD;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAyC;AAC/C,SAAK,cAAL,GAAsB,KAAtB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,4BAAY,KAAK,cAAjB,CAAP,EAAyC;AACvC,YAAM,SAAS,GAAG,KAAK,cAAvB;AACA,WAAK,cAAL,GAAsB,cAAtB;AACA,MAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,QAAI,KAAK,cAAL,KAAwB,cAA5B,EAAsC;AACpC;AACD;;AAED,UAAM,WAAW,GAAG,KAAK,cAAzB;AACA,UAAM,WAAW,GAAG,KAAK,KAAzB;AACA,UAAM,oBAAoB,GAAG,WAAW,IAAI,IAAf,IACzB,WAAW,IAAI,IAAf,KACK,WAAW,CAAC,OAAZ,KAAwB,WAAW,CAAC,OAApC,IACA,WAAW,CAAC,IAAZ,KAAqB,WAAW,CAAC,IADjC,IAEA,WAAW,CAAC,OAAZ,KAAwB,WAAW,CAAC,OAHzC,CADJ;AAKA,UAAM,iBAAiB,GACnB,WAAW,IAAI,IAAf,KAAwB,WAAW,IAAI,IAAf,IAAuB,oBAA/C,CADJ;;AAGA,QAAI,oBAAJ,EAA0B;AACxB,WAAK,OAAL,CAAa,mBAAb,CACI,KAAK,SADT,EACoB,KAAK,kBADzB,EAC6C,KAAK,SADlD;AAED;;AACD,QAAI,iBAAJ,EAAuB;AACrB,WAAK,SAAL,GAAiB,UAAU,CAAC,WAAD,CAA3B;AACA,WAAK,OAAL,CAAa,gBAAb,CACI,KAAK,SADT,EACoB,KAAK,kBADzB,EAC6C,KAAK,SADlD;AAED;;AACD,SAAK,KAAL,GAAa,WAAb;AACA,SAAK,cAAL,GAAsB,cAAtB;AACD;;AAED,EAAA,WAAW,CAAC,KAAD,EAAa;AACtB,QAAI,OAAO,KAAK,KAAZ,KAAsB,UAA1B,EAAsC;AACpC,WAAK,KAAL,CAAW,IAAX,CAAgB,KAAK,YAAL,IAAqB,KAAK,OAA1C,EAAmD,KAAnD;AACD,KAFD,MAEO;AACJ,WAAK,KAAL,CAAmC,WAAnC,CAA+C,KAA/C;AACF;AACF;;AA3DmB,EA8DtB;AACA;AACA;;;;;AACA,MAAM,UAAU,GAAI,CAAD,IAA0C,CAAC,KACzD,qBAAqB,GACjB;AAAC,EAAA,OAAO,EAAE,CAAC,CAAC,OAAZ;AAAqB,EAAA,OAAO,EAAE,CAAC,CAAC,OAAhC;AAAyC,EAAA,IAAI,EAAE,CAAC,CAAC;AAAjD,CADiB,GAEjB,CAAC,CAAC,OAHmD,CAA9D","file":"app.a0488aa9.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","// Simple spreadsheet with columns A-Z and rows 0-99. Cells can be set\n// to constant numbers or strings as well as formulas, which are\n// indicated with a leading '='. Formula expressions can be cell\n// references, numeric constants, or operators with formula expression\n// arguments, or for sum and prod, rectangular regions.\nexport interface Spreadsheet {\n  setCell(row: number, col: number, cell: string): void;\n  cell(row: number, col: number): string;\n  value(row: number, col: number): string;\n}\n\nconst ROW_COUNT = 100;\nconst COL_COUNT = 'Z'.charCodeAt(0) - 'A'.charCodeAt(0) + 1;\nconst CELL_COUNT = ROW_COUNT * COL_COUNT;\nconst REF_PATTERN = /^([a-z])([0-9][0-9]?)/i; // Cell references A0 to Z99\nconst OP_PATTERN = /^(sum|prod|add|sub|div|mul)[(]/;\nconst ALWAYS_NAN = (depth: number) => NaN;\nconst EMPTY_FORMULA: Formula = newFormula('', ALWAYS_NAN);\n\n// Evaluation obtains values for arguments for (row/col)\n// positions. If there is a cycle, we detect it by incrementing\n// depth every time we dereference.\ninterface Calculator {\n  (depth: number): number;\n}\n\ninterface Formula extends Calculator {\n  displayString: string;\n  value(): string; // Calculated value or displayString, if NaN\n}\n\ntype Env = (row: number, col: number) => Calculator;\n\n// Encapsulates position in text to be parsed.\ninterface ParseState {\n  // Throws syntax error unless the expected string is at the current position\n  match: (expected: string) => void;\n  // Returns result of RegExp.exec and advances current position by match, if successful.\n  tryMatch: (r: RegExp) => RegExpExecArray | null;\n}\n\nexport function newSpreadsheet(): Spreadsheet {\n  const cells: Formula[][] = Array.from({ length: ROW_COUNT }, (_, i) =>\n    Array.from({ length: COL_COUNT }, (_, j) => EMPTY_FORMULA)\n  );\n  const deref = (row: number, col: number) => (depth: number) =>\n    depth > CELL_COUNT ? NaN : cells[row][col](depth + 1);\n  return {\n    value: (row, col) => cells[row][col].value(),\n    cell: (row, col) => cells[row][col].displayString,\n    setCell: (row, col, cell) =>\n      (cells[row][col] = cell.startsWith('=')\n        ? newFormula(cell, parseExpr(newParseState(cell.substr(1)), deref))\n        : parseConstant(cell)),\n  };\n}\n\nfunction newFormula(displayString: string, calc: Calculator): Formula {\n  const result = calc as Formula;\n  result.displayString = displayString;\n  result.value = () => toStringWithFallback(calc(0), displayString);\n  return result;\n}\n\nconst toStringWithFallback = (n: number, fallback: string) =>\n  isNaN(n) ? fallback : String(n);\n\nfunction parseExpr(expr: ParseState, env: Env): Calculator {\n  const refMatch = expr.tryMatch(REF_PATTERN);\n  if (refMatch) {\n    const [row, col] = parseRef(refMatch);\n    return env(row, col);\n  }\n  const opMatch = expr.tryMatch(OP_PATTERN);\n  if (opMatch) {\n    return ARG_PARSER_BY_OP[opMatch[1]](expr, env);\n  }\n  const constMatch = expr.tryMatch(/^[^ ,()]+/);\n  if (!constMatch) {\n    return ALWAYS_NAN;\n  }\n  const n = Number(constMatch[0]);\n  return _ => n;\n}\n\nfunction parseRef(refMatch: RegExpExecArray | null): number[] {\n  if (!refMatch) throw new Error('syntax error: expected reference');\n  return [\n    Number(refMatch[2]),\n    refMatch[1].toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0),\n  ];\n}\n\n// Returns Formula with the given text as display string. The\n// Formula's calculated value is the given text as a number if\n// possible, NaN otherwise.\nfunction parseConstant(text: string): Formula {\n  const n = Number(text);\n  return newFormula(text, _ => n);\n}\n\nconst binOp = (op: (x: number, y: number) => number) => (\n  args: ParseState,\n  env: Env\n): Calculator => {\n  const [first, second] = parseTwoArgs(args, env);\n  return depth => op(first(depth), second(depth));\n};\n\nconst ARG_PARSER_BY_OP: {\n  [key: string]: (args: ParseState, env: Env) => Calculator;\n} = {\n  sum,\n  prod,\n  add: binOp((x, y) => x + y),\n  sub: binOp((x, y) => x - y),\n  div: binOp((x, y) => x / y),\n  mul: binOp((x, y) => x * y),\n};\n\nfunction sum(rect: ParseState, env: Env): Calculator {\n  const argValues = rectValues(parseRect(rect, env));\n  return depth => argValues(depth).reduce((a, n) => a + n, 0);\n}\n\nfunction prod(rect: ParseState, env: Env): Calculator {\n  const argValues = rectValues(parseRect(rect, env));\n  return depth => argValues(depth).reduce((a, n) => a * n, 1);\n}\n\n// Function returning a list of (non-NaN) numbers from the given calculators.\nconst rectValues = (rectCalculators: Calculator[]) => (depth: number) =>\n  rectCalculators.map(f => f(depth)).filter(n => !isNaN(n));\n\nfunction parseTwoArgs(args: ParseState, env: Env): Calculator[] {\n  const first = parseExpr(args, env);\n  if (!args.tryMatch(/^ *, */)) args.match(',');\n  const second = parseExpr(args, env);\n  if (!args.tryMatch(/^ *[)] */)) args.match(')');\n  return [first, second];\n}\n\nfunction parseRect(rect: ParseState, env: Env): Calculator[] {\n  const [ulRow, ulCol] = parseRef(rect.tryMatch(REF_PATTERN));\n  rect.match(':');\n  const [lrRow, lrCol] = parseRef(rect.tryMatch(REF_PATTERN));\n  if (!rect.tryMatch(/^ *[)] */)) rect.match(')');\n  const h = lrRow - ulRow + 1;\n  const w = lrCol - ulCol + 1;\n  return Array.from({ length: h }, (_, i) => ulRow + i).reduce(\n    (acc: Calculator[], i) =>\n      acc.concat(Array.from({ length: w }, (_, j) => env(i, j))),\n    []\n  );\n}\n\nfunction newParseState(text: string): ParseState {\n  let pos = 0;\n  function match(expected: string) {\n    if (text.substr(pos, expected.length) === expected) {\n      pos += expected.length;\n    } else {\n      throw new Error(`Parse error wanted ${expected} at ${text.substr(pos)}`);\n    }\n  }\n  function tryMatch(r: RegExp) {\n    const match = r.exec(text.substr(pos));\n    if (match) {\n      pos += match[0].length;\n    }\n    return match;\n  }\n  return { match, tryMatch };\n}\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\nexport interface StyleInfo {\n  readonly [name: string]: string;\n}\n\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap<AttributePart, StyleInfo>();\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo: StyleInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'style' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `styleMap` directive must be used in the style attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {style} = committer.element as HTMLElement;\n\n  // Handle static styles the first time we see a Part\n  if (!styleMapCache.has(part)) {\n    style.cssText = committer.strings.join(' ');\n  }\n\n  // Remove old properties that no longer exist in styleInfo\n  const oldInfo = styleMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in styleInfo)) {\n      if (name.indexOf('-') === -1) {\n        // tslint:disable-next-line:no-any\n        (style as any)[name] = null;\n      } else {\n        style.removeProperty(name);\n      }\n    }\n  }\n\n  // Add or update properties\n  for (const name in styleInfo) {\n    if (name.indexOf('-') === -1) {\n      // tslint:disable-next-line:no-any\n      (style as any)[name] = styleInfo[name];\n    } else {\n      style.setProperty(name, styleInfo[name]);\n    }\n  }\n  styleMapCache.set(part, styleInfo);\n});\n","import { html, render, svg } from '../node_modules/lit-html/lit-html';\nimport { newSpreadsheet } from './spreadsheet';\nimport { styleMap } from '../node_modules/lit-html/directives/style-map.js';\n\nfunction newCounter() {\n  let count = 0;\n  return () => html`\n    <form class=\"pure-form\">\n      <label>${count}</label>\n      <div class=\"pure-button pure-button-primary\" @click=${() => (count += 1)}>\n        Count\n      </div>\n    </form>\n  `;\n}\n\nfunction newConverter() {\n  let temp = 32; // in Fahrenheit\n  function fahrenheitInput(this: HTMLInputElement) {\n    temp = Number(this.value);\n  }\n  function celsiusInput(this: HTMLInputElement) {\n    temp = Math.round(Number(this.value) * 1.8 + 32);\n  }\n  return () => html`\n    <form class=\"pure-form\">\n      <input\n        id=\"celsius\"\n        .value=\"${Math.round((temp - 32) / 1.8)}\"\n        @input=${celsiusInput}\n      />\n      <label for=\"celsius\">Celsius =</label>\n      <input id=\"fahrenheit\" .value=\"${temp}\" @input=${fahrenheitInput} />\n      <label for=\"fahrenheit\">Fahrenheit</label>\n    </form>\n  `;\n}\n\nfunction newBooker() {\n  let flightType = 'one-way flight';\n  let out = new Date().toISOString().substr(0, 10); // match yyyy-MM-dd format used by date input\n  let back = out;\n  let booked = false;\n  function typeChange(this: HTMLInputElement) {\n    flightType = this.value;\n  }\n  function outboundChange(this: HTMLInputElement) {\n    out = this.value;\n  }\n  function returnChange(this: HTMLInputElement) {\n    back = this.value;\n  }\n  const bookClick = () => (booked = true);\n  return () => html`\n    <form class=\"pure-form\">\n      <fieldset class=\"pure-group\">\n        <select class=\"pure-input-1-4\" @change=${typeChange}>\n          <option>one-way flight</option>\n          <option>return flight</option>\n        </select>\n        <input\n          class=\"pure-input-1-4\"\n          type=\"date\"\n          .value=${out}\n          @change=${outboundChange}\n        />\n        <input\n          class=\"pure-input-1-4\"\n          type=\"date\"\n          .value=${back}\n          @change=${returnChange}\n          ?disabled=${flightType === 'one-way flight'}\n        />\n        <div\n          class=\"pure-button pure-button-primary pure-input-1-4\"\n          ?disabled=${flightType !== 'one-way flight' && back <= out}\n          @click=${bookClick}\n        >\n          Book\n        </div>\n      </fieldset>\n    </form>\n    <div style=\"display:${booked ? 'block' : 'none'}\">\n      You have booked a ${flightType} on\n      ${out}${flightType !== 'one-way flight' ? ' returning on ' + back : ''}.\n    </div>\n  `;\n}\n\nfunction newTimer() {\n  let elapsed = 0;\n  let duration = 25;\n  let timer: number | null = setInterval(tick, 100);\n  function tick() {\n    if (elapsed < duration) {\n      elapsed = Math.round(10 * elapsed + 1) / 10;\n    } else {\n      elapsed = duration;\n      clearInterval(timer!);\n      timer = null;\n    }\n    renderBody();\n  }\n  function durationChange(this: HTMLInputElement) {\n    duration = Number(this.value);\n  }\n\n  function reset() {\n    elapsed = 0;\n    if (!timer) {\n      timer = setInterval(tick, 100);\n    }\n  }\n  return () => html`\n    <style>\n      td {\n        padding: 0.5em 1em;\n      }\n    </style>\n    <table>\n      <tr>\n        <td style=\"text-align:right\">Elapsed time</td>\n        <td style=\"width:20em\">\n          <progress value=${elapsed} max=${duration} style=\"width:100%\">\n            Progress: ${Math.min(100, (100 * elapsed) / duration)}%\n          </progress>\n        </td>\n      </tr>\n      <tr>\n        <td style=\"text-align:right\">Elapsed seconds</td>\n        <td>${elapsed}</td>\n      </tr>\n      <tr>\n        <td style=\"text-align:right\">Duration</td>\n        <td>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"60\"\n            .value=\"${duration}\"\n            style=\"width:100%\"\n            @input=${durationChange}\n          />\n        </td>\n      </tr>\n    </table>\n\n    <div class=\"pure-button pure-button-primary\" @click=${reset}>Reset</div>\n  `;\n}\n\nfunction newCrud() {\n  let prefix = '';\n  let selected: number | undefined = undefined;\n  const nameList = ['Emil, Hans', 'Mustermann, Max', 'Tisch, Roman'];\n  const first = document.createElement('input');\n  const last = document.createElement('input');\n  first.type = 'text';\n  last.type = 'text';\n  function prefixChange(this: HTMLInputElement) {\n    prefix = this.value;\n  }\n  function selectionChange(this: HTMLInputElement) {\n    selected = Number(this.value);\n    const match = nameList[selected].match('([^,]*), (.*)');\n    if (match) {\n      last.value = match[1];\n      first.value = match[2];\n    }\n  }\n  function resetSelection() {\n    selected = undefined;\n    last.value = '';\n    first.value = '';\n  }\n  function create() {\n    nameList.push(last.value + ', ' + first.value);\n    resetSelection();\n  }\n  const update = () =>\n    (nameList[selected || 0] = last.value + ', ' + first.value);\n  function Delete() {\n    delete nameList[selected || 0];\n    resetSelection();\n  }\n  return () => html`\n    <form class=\"pure-form pure-form-aligned\">\n      <div>\n        <label>Filter prefix:</label>\n        <input type=\"text\" .value=${prefix} @input=${prefixChange} />\n      </div>\n      <div>\n        <select size=\"2\" style=\"height:100px\" @change=${selectionChange}>\n          ${nameList.map((name, i) =>\n            !prefix.length || name.startsWith(prefix)\n              ? html`\n                  <option value=${i}>${name}</option>\n                `\n              : html``\n          )}\n        </select>\n        <fieldset style=\"display:inline-block;vertical-align:middle;\">\n          <div class=\"pure-control-group\"><label>Surname:</label>${last}</div>\n          <div class=\"pure-control-group\"><label>Name:</label>${first}</div>\n        </fieldset>\n      </div>\n      <div>\n        <span class=\"pure-button pure-button-primary\" @click=${create}\n          >Create</span\n        >\n        <span\n          class=\"pure-button pure-button-primary\"\n          ?disabled=${selected === undefined}\n          @click=${update}\n          >Update</span\n        >\n        <span\n          class=\"pure-button pure-button-primary\"\n          ?disabled=${selected === undefined}\n          @click=${Delete}\n          >Delete</span\n        >\n      </div>\n    </form>\n  `;\n}\n\ninterface Circle {\n  x: number;\n  y: number;\n  r: number;\n}\n\ntype State = Circle[];\n\nfunction newCircles() {\n  let state: State = [];\n  let selected: number | undefined = undefined;\n  const undo: State[] = [];\n  const redo: State[] = [];\n  function newCircle(this: SVGElement, e: MouseEvent) {\n    undo.push(state);\n    selected = undefined;\n    const svg = this.getBoundingClientRect();\n    state = [...state, { x: e.x - svg.left, y: e.y - svg.top, r: 20 }];\n  }\n  function adjustRadius(this: HTMLInputElement) {\n    state[selected!].r = Number(this.value);\n  }\n  function selectHandler(index: number) {\n    return selectCircle;\n    function selectCircle(this: SVGCircleElement, e: MouseEvent) {\n      selected = index;\n      undo.push(state);\n      // New state with fresh copy of selected circle\n      state = [...state];\n      state[selected] = { ...state[selected] };\n      e.stopPropagation(); // prevent creating a new circle in addition\n      renderBody();\n    }\n  }\n  function Undo() {\n    redo.push(state);\n    state = undo.pop() as State;\n  }\n  function Redo() {\n    undo.push(state);\n    state = redo.pop() as State;\n  }\n  function advanceState(nextState: State) {\n    undo.push(state);\n    state = nextState;\n    renderBody();\n  }\n  const radiusControl = ({ x, y, r }: Circle) => html`\n    <p class=\"pure-form\">\n      <label>Adjust radius of circle at (${x}, ${y}):</label>\n      <input type=\"range\" @input=${adjustRadius} .value=${r} />\n    </p>\n  `;\n  return () => html`\n    <div style=\"content-align:center\">\n      <span\n        class=\"pure-button pure-button-primary\"\n        ?disabled=${!undo.length}\n        @click=${Undo}\n        >Undo</span\n      >\n      <span\n        class=\"pure-button pure-button-primary\"\n        ?disabled=${!redo.length}\n        @click=${Redo}\n        >Redo</span\n      >\n    </div>\n    <svg @click=${newCircle} style=\"border: 2px solid; width:100%; height:60ex\">\n      ${state.map(\n        ({ x, y, r }, index) =>\n          svg`\n          <circle cx=${x} cy=${y} r=${r} \n            style=\"fill:${\n              index === selected ? 'grey' : 'transparent'\n            };stroke-width: 1;stroke: black;transition: fill 0.2s ease 0s;\"\n             @click=${selectHandler(index)}>\n          </circle>`\n      )}\n    </svg>\n    ${selected === undefined ? '' : radiusControl(state[selected])}\n  `;\n}\n\nfunction newCells() {\n  let selected: { i: number; j: number } | undefined = undefined;\n  const sheet = newSpreadsheet();\n  const editableCell = document.createElement('td');\n  editableCell.contentEditable = 'true';\n  editableCell.addEventListener('keydown', keydown);\n  const hookByKey: { [key: string]: (i: number, j: number) => void } = {\n    Enter: (i, j) => (selected = undefined),\n    ArrowRight: (i, j) => j < 26 && (selected!.j += 1),\n    ArrowLeft: (i, j) => j > 0 && (selected!.j -= 1),\n    ArrowUp: (i, j) => i > 0 && (selected!.i -= 1),\n    ArrowDown: (i, j) => i < 99 && (selected!.i += 1),\n  };\n  function keydown(this: HTMLTableDataCellElement, ev: KeyboardEvent) {\n    if (selected) {\n      const hook = hookByKey[ev.key];\n      if (hook) {\n        const { i, j } = selected!;\n        sheet.setCell(i, j, this.innerText);\n        hook(i, j);\n        renderBody();\n        if (selected) {\n          editableCell.innerText = sheet.cell(selected.i, selected.j);\n          editableCell.focus();\n        }\n      }\n    }\n  }\n  return () => html`\n    <style>\n      #sheet th {\n        min-width: 6ch;\n        border: 1px solid #cbcbcb;\n      }\n      #sheet td:first-child,\n      #sheet tr:first-child {\n        background-color: #f7f7f7;\n        user-select: none;\n        text-align: center;\n      }\n    </style>\n    <div style=\"height: 66ex;overflow:auto\">\n      <table id=\"sheet\" class=\"pure-table pure-table-bordered\">\n        <tr>\n          <th style=\"min-width:1ch\"></th>\n          ${Array.from(\n            { length: 26 },\n            (_, i) =>\n              html`\n                <th>${String.fromCharCode(65 + i)}</th>\n              `\n          )}\n        </tr>\n        ${Array.from(\n          { length: 100 },\n          (_, i) => html`\n            <tr>\n              <td><b>${i}</b></td>\n              ${Array.from({ length: 26 }, (_, j) => {\n                return selected && selected.i === i && selected.j === j\n                  ? editableCell\n                  : html`\n                      <td\n                        @click=${(e: MouseEvent) => {\n                          selected = { i, j };\n                          editableCell.innerText = sheet.cell(i, j);\n                          renderBody();\n                          editableCell.focus();\n                        }}\n                      >\n                        ${sheet.value(i, j)}\n                      </td>\n                    `;\n              })}\n            </tr>\n          `\n        )}\n      </table>\n    </div>\n    <p>\n      Click inside a cell to edit its content. Hit enter to apply. Click outside\n      the cell or hit escape to abort. Here are some example contents: '5.5',\n      'Some text', '=A1', '=sum(B2:C4)', '=div(C1, 5)'.\n    </p>\n  `;\n}\n\nconst examples = {\n  counter: { name: 'Counter', render: newCounter() },\n  converter: { name: 'Temperature Converter', render: newConverter() },\n  booker: { name: 'Flight Booker', render: newBooker() },\n  timer: { name: 'Timer', render: newTimer() },\n  crud: { name: 'CRUD', render: newCrud() },\n  drawer: { name: 'Circle Drawer', render: newCircles() },\n  cells: { name: 'Cells', render: newCells() },\n};\n\nconst renderBody = () =>\n  render(\n    html`\n      <div\n        class=\"pure-menu-scrollable pure-menu-horizontal\"\n        style=\"height:32px;background-color:blanchedalmond\"\n      >\n        <div class=\"pure-menu-heading\">Examples</div>\n        <ul class=\"pure-menu-list\">\n          ${Object.entries(examples).map(\n            ([k, { name }]) =>\n              html`\n                <li class=\"pure-menu-item\">\n                  <a href=\"#${k}\" class=\"pure-menu-link\">${name}</a>\n                </li>\n              `\n          )}\n        </ul>\n      </div>\n      <p></p>\n      <div\n        style=\"margin-left:auto; margin-right:auto; max-width:48em; color:#777\"\n      >\n        ${Object.entries(examples).map(\n          ([k, { render }]) =>\n            html`\n              <div\n                style=\"${styleMap(\n                  '#' + k === window.location.hash ? {} : { display: 'none' }\n                )}\"\n              >\n                ${render()}\n              </div>\n            `\n        )}\n      </div>\n    `,\n    document.body\n  );\n\nif (!window.location.hash) {\n  window.location.hash = 'counter';\n}\nrenderBody();\nwindow.addEventListener('change', renderBody);\nwindow.addEventListener('click', renderBody);\nwindow.addEventListener('hashchange', renderBody);\nwindow.addEventListener('input', renderBody);\n"]}